# Code generated by skv2. DO NOT EDIT.

apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  labels:
    app: gloo-mesh
    app.kubernetes.io/name: gloo-mesh
  name: trafficpolicies.networking.mesh.gloo.solo.io
spec:
  group: networking.mesh.gloo.solo.io
  names:
    kind: TrafficPolicy
    listKind: TrafficPolicyList
    plural: trafficpolicies
    singular: trafficpolicy
  preserveUnknownFields: false
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      properties:
        spec:
          description: Applies L7 routing and post-routing configuration on selected
            network edges.
          properties:
            destinationSelector:
              description: |-
                Specify the Destinations (destinations) this TrafficPolicy applies to.
                Omit to apply to all Destinations.
              items:
                properties:
                  kubeServiceMatcher:
                    description: Match Kubernetes Services by their labels, namespaces,
                      and/or clusters.
                    properties:
                      clusters:
                        description: |-
                          If specified, match Kubernetes Services if they exist in one of the specified clusters.
                                     When used in a networking policy, omission matches any cluster.
                                     When used in a Gloo Mesh Role, a wildcard (`"*"`) must be specified to match any cluster.
                        items:
                          type: string
                        type: array
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          If specified, a match requires all labels to exist on a Kubernetes Service.
                                     When used in a networking policy, omission matches any labels.
                                     When used in a Gloo Mesh Role, a wildcard (`"*"`) must be specified to match any label key and/or value.
                        type: object
                      namespaces:
                        description: |-
                          If specified, match Kubernetes Services if they exist in one of the specified namespaces.
                                     When used in a networking policy, omission matches any namespace.
                                     When used in a Gloo Mesh Role, a wildcard (`"*"`) must be specified to match any namespace.
                        items:
                          type: string
                        type: array
                    type: object
                  kubeServiceRefs:
                    description: Match Kubernetes Services by direct reference.
                    properties:
                      services:
                        description: |-
                          Match Kubernetes Services by direct reference. All fields are required.
                                     When used in a Gloo Mesh Role, a wildcard (`"*"`) must be specified to match any value for the given field.
                        items:
                          properties:
                            clusterName:
                              description: name of the cluster in which the resource
                                exists
                              type: string
                            name:
                              description: name of the resource being referenced
                              type: string
                            namespace:
                              description: namespace of the resource being referenced
                              type: string
                          type: object
                        type: array
                    type: object
                type: object
              type: array
            httpRequestMatchers:
              description: |-
                Specify criteria that HTTP requests must satisfy for the TrafficPolicy to apply.
                Conditions defined within a single matcher are conjunctive, i.e. all conditions must be satisfied for a match to occur.
                Conditions defined between different matchers are disjunctive, i.e. at least one matcher must be satisfied for the TrafficPolicy to apply.
                Omit to apply to any HTTP request.
              items:
                properties:
                  headers:
                    description: Specify a set of headers which requests must match
                      in entirety (all headers must match).
                    items:
                      properties:
                        invertMatch:
                          description: |-
                            If set to true, the result of the match will be inverted. Defaults to false.

                               Examples:

                                   - name=foo, invert_match=true: matches if no header named `foo` is present
                                   - name=foo, value=bar, invert_match=true: matches if no header named `foo` with value `bar` is present
                                   - name=foo, value=``\d{3}``, regex=true, invert_match=true: matches if no header named `foo` with a value consisting of three integers is present.
                          type: boolean
                        name:
                          description: Specify the name of the header in the request.
                          type: string
                        regex:
                          description: Specify whether the header value should be
                            treated as regex.
                          type: boolean
                        value:
                          description: |-
                            Specify the value of the header. If the value is absent a request that
                            has the name header will match, regardless of the headerâ€™s value.
                          type: string
                      type: object
                    type: array
                  method:
                    description: Specify an HTTP method to match against.
                    type: string
                  name:
                    description: |-
                      The name assigned to a match. The match's name will be
                      concatenated with the parent route's name and will be logged in
                      the access logs for requests matching this route.
                    type: string
                  queryParameters:
                    description: Specify a set of URL query parameters which requests
                      must match in entirety (all query params must match).
                    items:
                      properties:
                        name:
                          description: Specify the name of a key that must be present
                            in the requested path's query string.
                          type: string
                        regex:
                          description: If true, treat `value` as a regular expression.
                          type: boolean
                        value:
                          description: Specify the value of the query parameter keyed
                            on `name`.
                          type: string
                      type: object
                    type: array
                  uri:
                    description: Specify match criteria against the targeted path.
                    oneOf:
                    - not:
                        anyOf:
                        - required:
                          - exact
                        - required:
                          - prefix
                        - required:
                          - regex
                        - required:
                          - suffix
                    - required:
                      - exact
                    - required:
                      - prefix
                    - required:
                      - regex
                    - required:
                      - suffix
                    properties:
                      exact:
                        description: Exact string match.
                        type: string
                      ignoreCase:
                        description: If true, indicates the exact/prefix/suffix matching
                          should be case insensitive. This has no effect for the regex
                          match.
                        type: boolean
                      prefix:
                        description: Prefix-based match.
                        type: string
                      regex:
                        description: ECMAscript style regex-based match.
                        type: string
                      suffix:
                        description: Suffix-based match.
                        type: string
                    type: object
                type: object
              type: array
            policy:
              description: Specify L7 routing and post-routing configuration.
              properties:
                corsPolicy:
                  description: |-
                    Set a Cross-Origin Resource Sharing policy (CORS) for requests. Refer to [this link](https://developer.mozilla.org/en-US/docs/Web/HTTP/Access_control_CORS)
                    for further details about cross origin resource sharing.
                  properties:
                    allowCredentials:
                      description: |-
                        Indicates whether the caller is allowed to send the actual request
                        (not the preflight) using credentials. Translates to the
                        `Access-Control-Allow-Credentials` header.
                      nullable: true
                      type: boolean
                    allowHeaders:
                      description: |-
                        List of HTTP headers that can be used when requesting the
                        resource. Serialized to the `Access-Control-Allow-Headers` header.
                      items:
                        type: string
                      type: array
                    allowMethods:
                      description: |-
                        List of HTTP methods allowed to access the resource. The content will
                        be serialized to the `Access-Control-Allow-Methods` header.
                      items:
                        type: string
                      type: array
                    allowOrigins:
                      description: String patterns that match allowed origins. An
                        origin is allowed if any of the string matchers match.
                      items:
                        oneOf:
                        - not:
                            anyOf:
                            - required:
                              - exact
                            - required:
                              - prefix
                            - required:
                              - regex
                            - required:
                              - suffix
                        - required:
                          - exact
                        - required:
                          - prefix
                        - required:
                          - regex
                        - required:
                          - suffix
                        properties:
                          exact:
                            description: Exact string match.
                            type: string
                          ignoreCase:
                            description: If true, indicates the exact/prefix/suffix
                              matching should be case insensitive. This has no effect
                              for the regex match.
                            type: boolean
                          prefix:
                            description: Prefix-based match.
                            type: string
                          regex:
                            description: ECMAscript style regex-based match.
                            type: string
                          suffix:
                            description: Suffix-based match.
                            type: string
                        type: object
                      type: array
                    exposeHeaders:
                      description: |-
                        A list of HTTP headers that browsers are allowed to
                        access. Serialized to the `Access-Control-Expose-Headers` header.
                      items:
                        type: string
                      type: array
                    maxAge:
                      description: |-
                        Specify how long the results of a preflight request can be
                        cached. Serialized to the `Access-Control-Max-Age` header.
                      type: string
                  type: object
                csrf:
                  description: Configure the Envoy based CSRF filter
                  properties:
                    additionalOrigins:
                      description: |-
                        Specifies additional source origins that will be allowed in addition to
                        the destination origin.
                      items:
                        oneOf:
                        - not:
                            anyOf:
                            - required:
                              - exact
                            - required:
                              - prefix
                            - required:
                              - regex
                            - required:
                              - suffix
                        - required:
                          - exact
                        - required:
                          - prefix
                        - required:
                          - regex
                        - required:
                          - suffix
                        properties:
                          exact:
                            description: Exact string match.
                            type: string
                          ignoreCase:
                            description: If true, indicates the exact/prefix/suffix
                              matching should be case insensitive. This has no effect
                              for the regex match.
                            type: boolean
                          prefix:
                            description: Prefix-based match.
                            type: string
                          regex:
                            description: ECMAscript style regex-based match.
                            type: string
                          suffix:
                            description: Suffix-based match.
                            type: string
                        type: object
                      type: array
                    filterEnabled:
                      description: Specifies that CSRF policies will be evaluated,
                        tracked and enforced.
                      type: boolean
                    percentage:
                      description: |-
                        Specifies the % of requests for which the CSRF filter is enabled or when shadow mode is enabled the % of requests
                        evaluated and tracked, but not enforced.

                        If filter_enabled or shadow_enabled is true.
                        Envoy will lookup the runtime key to get the percentage of requests to filter.

                        .. note:: This field defaults to 100
                      format: double
                      type: number
                    shadowEnabled:
                      description: |-
                        Specifies that CSRF policies will be evaluated and tracked, but not enforced.

                        This is intended to be used when ``filter_enabled`` is false and will be ignored otherwise.
                      type: boolean
                  type: object
                faultInjection:
                  description: Inject faulty responses.
                  oneOf:
                  - not:
                      anyOf:
                      - required:
                        - fixedDelay
                      - required:
                        - abort
                  - required:
                    - fixedDelay
                  - required:
                    - abort
                  properties:
                    abort:
                      description: Abort the request and return the specified error
                        code back to traffic source.
                      properties:
                        httpStatus:
                          description: Required. HTTP status code to use to abort
                            the request.
                          format: int32
                          type: integer
                      type: object
                    fixedDelay:
                      description: 'Add a delay of a fixed duration before sending
                        the request. Format: `1h`/`1m`/`1s`/`1ms`. MUST be >=1ms.'
                      type: string
                    percentage:
                      description: Percentage of requests to be faulted. Values range
                        between 0 and 100. If omitted all requests will be faulted.
                      format: double
                      type: number
                  type: object
                headerManipulation:
                  description: Manipulate request and response headers.
                  properties:
                    appendRequestHeaders:
                      additionalProperties:
                        type: string
                      description: Additional HTTP headers to add before forwarding
                        a request to the destination service.
                      type: object
                    appendResponseHeaders:
                      additionalProperties:
                        type: string
                      description: Additional HTTP headers to add before returning
                        a response to the caller.
                      type: object
                    removeRequestHeaders:
                      description: HTTP headers to remove before forwarding a request
                        to the destination service.
                      items:
                        type: string
                      type: array
                    removeResponseHeaders:
                      description: HTTP headers to remove before returning a response
                        to the caller.
                      items:
                        type: string
                      type: array
                  type: object
                mirror:
                  description: Mirror traffic to a another destination (traffic will
                    be sent to its original destination in addition to the mirrored
                    destinations).
                  oneOf:
                  - not:
                      anyOf:
                      - required:
                        - kubeService
                  - required:
                    - kubeService
                  properties:
                    kubeService:
                      description: Reference (name, namespace, Gloo Mesh cluster)
                        to a Kubernetes service.
                      properties:
                        clusterName:
                          description: name of the cluster in which the resource exists
                          type: string
                        name:
                          description: name of the resource being referenced
                          type: string
                        namespace:
                          description: namespace of the resource being referenced
                          type: string
                      type: object
                    percentage:
                      description: Percentage of traffic to mirror. If omitted all
                        traffic will be mirrored. Values must be between 0 and 100.
                      format: double
                      type: number
                    port:
                      description: Port on the destination to receive traffic. Required
                        if the destination exposes multiple ports.
                      maximum: 4294967295
                      minimum: 0
                      type: integer
                  type: object
                mtls:
                  description: Configure mTLS settings. If specified will override
                    global default defined in Settings.
                  properties:
                    istio:
                      description: Istio TLS settings.
                      properties:
                        tlsMode:
                          description: TLS connection mode
                          enum:
                          - DISABLE
                          - SIMPLE
                          - ISTIO_MUTUAL
                          type: string
                      type: object
                  type: object
                outlierDetection:
                  description: |-
                    Configure [outlier detection](https://www.envoyproxy.io/docs/envoy/latest/intro/arch_overview/upstream/outlier) on the selected destinations.
                    Specifying this field requires an empty `source_selector` because it must apply to all traffic.
                  properties:
                    baseEjectionTime:
                      description: 'The minimum ejection duration. Format: `1h`/`1m`/`1s`/`1ms`.
                        Must be >= `1ms`. A default will be used if not set.'
                      type: string
                    consecutiveErrors:
                      description: The number of errors before a host is ejected from
                        the connection pool. A default will be used if not set.
                      maximum: 4294967295
                      minimum: 0
                      type: integer
                    interval:
                      description: 'The time interval between ejection sweep analysis.
                        Format: `1h`/`1m`/`1s`/`1ms`. Must be >= `1ms`. A default
                        will be used if not set.'
                      type: string
                    maxEjectionPercent:
                      description: |-
                        The maximum percentage of hosts that can be ejected from the load balancing pool.
                        At least one host will be ejected regardless of the value. Must be between 0 and 100. A default will be used if not set.
                      maximum: 4294967295
                      minimum: 0
                      type: integer
                  type: object
                rateLimit:
                  description: Config the Envoy based Ratelimit filter
                  oneOf:
                  - not:
                      anyOf:
                      - required:
                        - basic
                      - required:
                        - advanced
                      - required:
                        - configRefs
                  - required:
                    - basic
                  - required:
                    - advanced
                  - required:
                    - configRefs
                  properties:
                    advanced:
                      description: |-
                        Partial config for GlooE rate-limiting based on Envoy's rate-limit service;
                        supports Envoy's rate-limit service API. (reference here: https://github.com/lyft/ratelimit#configuration)
                        Configure rate-limit *actions* here, which define how request characteristics get translated into
                        descriptors used by the rate-limit service for rate-limiting. Configure rate-limit *descriptors* and
                        their associated limits on the Gloo settings.
                        Only one of `ratelimit` or `rate_limit_configs` can be set.
                      properties:
                        actions:
                          description: |-
                            Define individual rate limits here. Each rate limit will be evaluated, if any rate limit
                            would be throttled, the entire request returns a 429 (gets throttled)
                          items:
                            properties:
                              actions:
                                description: 'TODO: come up with descriptive names
                                  and comments for these fields'
                                items:
                                  oneOf:
                                  - not:
                                      anyOf:
                                      - required:
                                        - sourceCluster
                                      - required:
                                        - destinationCluster
                                      - required:
                                        - requestHeaders
                                      - required:
                                        - remoteAddress
                                      - required:
                                        - genericKey
                                      - required:
                                        - headerValueMatch
                                  - required:
                                    - sourceCluster
                                  - required:
                                    - destinationCluster
                                  - required:
                                    - requestHeaders
                                  - required:
                                    - remoteAddress
                                  - required:
                                    - genericKey
                                  - required:
                                    - headerValueMatch
                                  properties:
                                    destinationCluster:
                                      description: Rate limit on destination cluster.
                                      type: object
                                    genericKey:
                                      description: Rate limit on a generic key.
                                      properties:
                                        descriptorValue:
                                          description: The value to use in the descriptor
                                            entry.
                                          type: string
                                      type: object
                                    headerValueMatch:
                                      description: Rate limit on the existence of
                                        request headers.
                                      properties:
                                        descriptorValue:
                                          description: The value to use in the descriptor
                                            entry.
                                          type: string
                                        expectMatch:
                                          description: |-
                                            If set to true, the action will append a descriptor entry when the
                                            request matches the headers. If set to false, the action will append a
                                            descriptor entry when the request does not match the headers. The
                                            default value is true.
                                          nullable: true
                                          type: boolean
                                        headers:
                                          description: |-
                                            Specifies a set of headers that the rate limit action should match
                                            on. The action will check the requestâ€™s headers against all the
                                            specified headers in the config. A match will happen if all the
                                            headers in the config are present in the request with the same values
                                            (or based on presence if the value field is not in the config).
                                          items:
                                            oneOf:
                                            - not:
                                                anyOf:
                                                - required:
                                                  - exactMatch
                                                - required:
                                                  - regexMatch
                                                - required:
                                                  - rangeMatch
                                                - required:
                                                  - presentMatch
                                                - required:
                                                  - prefixMatch
                                                - required:
                                                  - suffixMatch
                                            - required:
                                              - exactMatch
                                            - required:
                                              - regexMatch
                                            - required:
                                              - rangeMatch
                                            - required:
                                              - presentMatch
                                            - required:
                                              - prefixMatch
                                            - required:
                                              - suffixMatch
                                            properties:
                                              exactMatch:
                                                description: If specified, header
                                                  match will be performed based on
                                                  the value of the header.
                                                type: string
                                              invertMatch:
                                                description: |-
                                                  If specified, the match result will be inverted before checking. Defaults to false.

                                                  Examples:

                                                  * The regex *\d{3}* does not match the value *1234*, so it will match when inverted.
                                                  * The range [-10,0) will match the value -1, so it will not match when inverted.
                                                type: boolean
                                              name:
                                                description: Specifies the name of
                                                  the header in the request.
                                                type: string
                                              prefixMatch:
                                                description: |-
                                                  If specified, header match will be performed based on the prefix of the header value.
                                                  Note: empty prefix is not allowed, please use present_match instead.

                                                  Examples:

                                                  * The prefix *abcd* matches the value *abcdxyz*, but not for *abcxyz*.
                                                type: string
                                              presentMatch:
                                                description: |-
                                                  If specified, header match will be performed based on whether the header is in the
                                                  request.
                                                type: boolean
                                              rangeMatch:
                                                description: |-
                                                  If specified, header match will be performed based on range.
                                                  The rule will match if the request header value is within this range.
                                                  The entire request header value must represent an integer in base 10 notation: consisting of
                                                  an optional plus or minus sign followed by a sequence of digits. The rule will not match if
                                                  the header value does not represent an integer. Match will fail for empty values, floating
                                                  point numbers or if only a subsequence of the header value is an integer.

                                                  Examples:

                                                  * For range [-10,0), route will match for header value -1, but not for 0, "somestring", 10.9,
                                                    "-1somestring"
                                                properties:
                                                  end:
                                                    description: end of the range
                                                      (exclusive)
                                                    format: int64
                                                    type: integer
                                                  start:
                                                    description: start of the range
                                                      (inclusive)
                                                    format: int64
                                                    type: integer
                                                type: object
                                              regexMatch:
                                                description: |-
                                                  If specified, this regex string is a regular expression rule which implies the entire request
                                                  header value must match the regex. The rule will not match if only a subsequence of the
                                                  request header value matches the regex. The regex grammar used in the value field is defined
                                                  `(here)[https://en.cppreference.com/w/cpp/regex/ecmascript]`.

                                                  Examples:

                                                  * The regex *\d{3}* matches the value *123*
                                                  * The regex *\d{3}* does not match the value *1234*
                                                  * The regex *\d{3}* does not match the value *123.456*
                                                type: string
                                              suffixMatch:
                                                description: |-
                                                  If specified, header match will be performed based on the suffix of the header value.
                                                  Note: empty suffix is not allowed, please use present_match instead.

                                                  Examples:

                                                  * The suffix *abcd* matches the value *xyzabcd*, but not for *xyzbcd*.
                                                type: string
                                            type: object
                                          type: array
                                      type: object
                                    remoteAddress:
                                      description: Rate limit on remote address.
                                      type: object
                                    requestHeaders:
                                      description: Rate limit on request headers.
                                      properties:
                                        descriptorKey:
                                          description: The key to use in the descriptor
                                            entry.
                                          type: string
                                        headerName:
                                          description: |-
                                            The header name to be queried from the request headers. The headerâ€™s
                                            value is used to populate the value of the descriptor entry for the
                                            descriptor_key.
                                          type: string
                                      type: object
                                    sourceCluster:
                                      description: Rate limit on source cluster.
                                      type: object
                                  type: object
                                type: array
                              setActions:
                                items:
                                  oneOf:
                                  - not:
                                      anyOf:
                                      - required:
                                        - sourceCluster
                                      - required:
                                        - destinationCluster
                                      - required:
                                        - requestHeaders
                                      - required:
                                        - remoteAddress
                                      - required:
                                        - genericKey
                                      - required:
                                        - headerValueMatch
                                  - required:
                                    - sourceCluster
                                  - required:
                                    - destinationCluster
                                  - required:
                                    - requestHeaders
                                  - required:
                                    - remoteAddress
                                  - required:
                                    - genericKey
                                  - required:
                                    - headerValueMatch
                                  properties:
                                    destinationCluster:
                                      description: Rate limit on destination cluster.
                                      type: object
                                    genericKey:
                                      description: Rate limit on a generic key.
                                      properties:
                                        descriptorValue:
                                          description: The value to use in the descriptor
                                            entry.
                                          type: string
                                      type: object
                                    headerValueMatch:
                                      description: Rate limit on the existence of
                                        request headers.
                                      properties:
                                        descriptorValue:
                                          description: The value to use in the descriptor
                                            entry.
                                          type: string
                                        expectMatch:
                                          description: |-
                                            If set to true, the action will append a descriptor entry when the
                                            request matches the headers. If set to false, the action will append a
                                            descriptor entry when the request does not match the headers. The
                                            default value is true.
                                          nullable: true
                                          type: boolean
                                        headers:
                                          description: |-
                                            Specifies a set of headers that the rate limit action should match
                                            on. The action will check the requestâ€™s headers against all the
                                            specified headers in the config. A match will happen if all the
                                            headers in the config are present in the request with the same values
                                            (or based on presence if the value field is not in the config).
                                          items:
                                            oneOf:
                                            - not:
                                                anyOf:
                                                - required:
                                                  - exactMatch
                                                - required:
                                                  - regexMatch
                                                - required:
                                                  - rangeMatch
                                                - required:
                                                  - presentMatch
                                                - required:
                                                  - prefixMatch
                                                - required:
                                                  - suffixMatch
                                            - required:
                                              - exactMatch
                                            - required:
                                              - regexMatch
                                            - required:
                                              - rangeMatch
                                            - required:
                                              - presentMatch
                                            - required:
                                              - prefixMatch
                                            - required:
                                              - suffixMatch
                                            properties:
                                              exactMatch:
                                                description: If specified, header
                                                  match will be performed based on
                                                  the value of the header.
                                                type: string
                                              invertMatch:
                                                description: |-
                                                  If specified, the match result will be inverted before checking. Defaults to false.

                                                  Examples:

                                                  * The regex *\d{3}* does not match the value *1234*, so it will match when inverted.
                                                  * The range [-10,0) will match the value -1, so it will not match when inverted.
                                                type: boolean
                                              name:
                                                description: Specifies the name of
                                                  the header in the request.
                                                type: string
                                              prefixMatch:
                                                description: |-
                                                  If specified, header match will be performed based on the prefix of the header value.
                                                  Note: empty prefix is not allowed, please use present_match instead.

                                                  Examples:

                                                  * The prefix *abcd* matches the value *abcdxyz*, but not for *abcxyz*.
                                                type: string
                                              presentMatch:
                                                description: |-
                                                  If specified, header match will be performed based on whether the header is in the
                                                  request.
                                                type: boolean
                                              rangeMatch:
                                                description: |-
                                                  If specified, header match will be performed based on range.
                                                  The rule will match if the request header value is within this range.
                                                  The entire request header value must represent an integer in base 10 notation: consisting of
                                                  an optional plus or minus sign followed by a sequence of digits. The rule will not match if
                                                  the header value does not represent an integer. Match will fail for empty values, floating
                                                  point numbers or if only a subsequence of the header value is an integer.

                                                  Examples:

                                                  * For range [-10,0), route will match for header value -1, but not for 0, "somestring", 10.9,
                                                    "-1somestring"
                                                properties:
                                                  end:
                                                    description: end of the range
                                                      (exclusive)
                                                    format: int64
                                                    type: integer
                                                  start:
                                                    description: start of the range
                                                      (inclusive)
                                                    format: int64
                                                    type: integer
                                                type: object
                                              regexMatch:
                                                description: |-
                                                  If specified, this regex string is a regular expression rule which implies the entire request
                                                  header value must match the regex. The rule will not match if only a subsequence of the
                                                  request header value matches the regex. The regex grammar used in the value field is defined
                                                  `(here)[https://en.cppreference.com/w/cpp/regex/ecmascript]`.

                                                  Examples:

                                                  * The regex *\d{3}* matches the value *123*
                                                  * The regex *\d{3}* does not match the value *1234*
                                                  * The regex *\d{3}* does not match the value *123.456*
                                                type: string
                                              suffixMatch:
                                                description: |-
                                                  If specified, header match will be performed based on the suffix of the header value.
                                                  Note: empty suffix is not allowed, please use present_match instead.

                                                  Examples:

                                                  * The suffix *abcd* matches the value *xyzabcd*, but not for *xyzbcd*.
                                                type: string
                                            type: object
                                          type: array
                                      type: object
                                    remoteAddress:
                                      description: Rate limit on remote address.
                                      type: object
                                    requestHeaders:
                                      description: Rate limit on request headers.
                                      properties:
                                        descriptorKey:
                                          description: The key to use in the descriptor
                                            entry.
                                          type: string
                                        headerName:
                                          description: |-
                                            The header name to be queried from the request headers. The headerâ€™s
                                            value is used to populate the value of the descriptor entry for the
                                            descriptor_key.
                                          type: string
                                      type: object
                                    sourceCluster:
                                      description: Rate limit on source cluster.
                                      type: object
                                  type: object
                                type: array
                            type: object
                          type: array
                      type: object
                    basic:
                      description: Config for rate-limiting using simplified (gloo-specific)
                        API
                      properties:
                        anonymousLimits:
                          description: limits for unauthorized users
                          properties:
                            requestsPerUnit:
                              maximum: 4294967295
                              minimum: 0
                              type: integer
                            unit:
                              enum:
                              - UNKNOWN
                              - SECOND
                              - MINUTE
                              - HOUR
                              - DAY
                              type: string
                          type: object
                        authorizedLimits:
                          description: limits for authorized users
                          properties:
                            requestsPerUnit:
                              maximum: 4294967295
                              minimum: 0
                              type: integer
                            unit:
                              enum:
                              - UNKNOWN
                              - SECOND
                              - MINUTE
                              - HOUR
                              - DAY
                              type: string
                          type: object
                      type: object
                    configRefs:
                      description: |-
                        References to RateLimitConfig resources. This is used to configure the GlooE rate limit server.
                        Only one of `ratelimit` or `rate_limit_configs` can be set.
                      properties:
                        refs:
                          items:
                            properties:
                              name:
                                description: name of the resource being referenced
                                type: string
                              namespace:
                                description: namespace of the resource being referenced
                                type: string
                            type: object
                          type: array
                      type: object
                  type: object
                requestTimeout:
                  description: Set a timeout on requests.
                  type: string
                retries:
                  description: Set a retry policy on requests.
                  properties:
                    attempts:
                      description: Number of retries for a given request
                      format: int32
                      type: integer
                    perTryTimeout:
                      description: 'Timeout per retry attempt for a given request.
                        Format: `1h`/`1m`/`1s`/`1ms`. *Must be >= 1ms*.'
                      type: string
                  type: object
                trafficShift:
                  description: Shift traffic to a different destination.
                  properties:
                    destinations:
                      description: Specify weighted traffic shift destinations.
                      items:
                        oneOf:
                        - not:
                            anyOf:
                            - required:
                              - kubeService
                            - required:
                              - virtualDestination
                            - required:
                              - staticDestination
                            - required:
                              - clusterHeader
                        - required:
                          - kubeService
                        - required:
                          - virtualDestination
                        - required:
                          - staticDestination
                        - required:
                          - clusterHeader
                        properties:
                          clusterHeader:
                            description: |-
                              Envoy will determine the cluster to route to by reading the value of the HTTP header named by cluster_header from the request headers.
                              If the header is not found or the referenced cluster does not exist, Envoy will return a 404 response.
                              Avoid using this whenever possible, it does not allow for custom filter configuration based on Virtual Host.
                              {{/* NOTE: unimplemented */}}
                            type: string
                          kubeService:
                            description: Specify a Kubernetes Service.
                            properties:
                              clusterName:
                                description: The Gloo Mesh cluster name (registration
                                  name) of the service.
                                type: string
                              name:
                                description: The name of the service.
                                type: string
                              namespace:
                                description: The namespace of the service.
                                type: string
                              port:
                                description: Port on the service to receive traffic.
                                  Required if the service exposes more than one port.
                                maximum: 4294967295
                                minimum: 0
                                type: integer
                              subset:
                                additionalProperties:
                                  type: string
                                description: Specify, by labels, a subset of service
                                  instances to route to.
                                type: object
                            type: object
                          options:
                            description: |-
                              additional options / config for a route which will be applied
                              when this destination is selected.
                            properties:
                              headerManipulation:
                                description: manipualte headers on traffic sent to
                                  this destination
                                properties:
                                  appendRequestHeaders:
                                    additionalProperties:
                                      type: string
                                    description: Additional HTTP headers to add before
                                      forwarding a request to the destination service.
                                    type: object
                                  appendResponseHeaders:
                                    additionalProperties:
                                      type: string
                                    description: Additional HTTP headers to add before
                                      returning a response to the caller.
                                    type: object
                                  removeRequestHeaders:
                                    description: HTTP headers to remove before forwarding
                                      a request to the destination service.
                                    items:
                                      type: string
                                    type: array
                                  removeResponseHeaders:
                                    description: HTTP headers to remove before returning
                                      a response to the caller.
                                    items:
                                      type: string
                                    type: array
                                type: object
                            type: object
                          staticDestination:
                            description: Reference to a gloo mesh Static Destination
                            properties:
                              name:
                                description: name of the resource being referenced
                                type: string
                              namespace:
                                description: namespace of the resource being referenced
                                type: string
                            type: object
                          virtualDestination:
                            description: Specify a VirtualDestination.
                            properties:
                              name:
                                description: The name of the VirtualDestination object.
                                type: string
                              namespace:
                                description: The namespace of the VirtualDestination
                                  object.
                                type: string
                              subset:
                                additionalProperties:
                                  type: string
                                description: Specify, by labels, a subset of service
                                  instances backing the VirtualDestination to route
                                  to.
                                type: object
                            type: object
                          weight:
                            description: |-
                              Specify the proportion of traffic to be forwarded to this destination.
                              Weights across all of the `destinations` must sum to 100.
                            maximum: 4294967295
                            minimum: 0
                            type: integer
                        type: object
                      type: array
                  type: object
              type: object
            sourceSelector:
              description: |-
                Specify the Workloads (traffic sources) this TrafficPolicy applies to.
                Omit to apply to all Workloads.
              items:
                properties:
                  kubeWorkloadMatcher:
                    description: Match Kubernetes workloads by their labels, namespaces,
                      and/or clusters.
                    properties:
                      clusters:
                        description: |-
                          If specified, match Kubernetes workloads if they exist in one of the specified clusters.
                                     When used in a networking policy, omission matches any cluster.
                                     When used in a Gloo Mesh Role, a wildcard (`"*"`) must be specified to match any cluster.
                        items:
                          type: string
                        type: array
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          If specified, all labels must exist on Kubernetes workload.
                                 When used in a networking policy, omission matches any labels.
                                 When used in a Gloo Mesh Role, a wildcard (`"*"`) must be specified to match any label key and/or value.
                        type: object
                      namespaces:
                        description: |-
                          If specified, match Kubernetes workloads if they exist in one of the specified namespaces.
                                     When used in a networking policy, omission matches any namespace.
                                     When used in a Gloo Mesh Role, a wildcard (`"*"`) must be specified to match any namespace.
                        items:
                          type: string
                        type: array
                    type: object
                type: object
              type: array
          type: object
        status:
          properties:
            destinations:
              additionalProperties:
                properties:
                  acceptanceOrder:
                    description: |-
                      Represents the order in which the policy
                      was accepted and applied to a discovery resource. The first accepted policy
                      will have an acceptance_order of 0, the second 1, etc.
                      When conflicts are detected in the system,
                      the Policy with the lowest acceptance_order
                      will be chosen and all other conflicting policies will be rejected.
                    maximum: 4294967295
                    minimum: 0
                    type: integer
                  errors:
                    description: Any errors observed which prevented the resource
                      from being Accepted.
                    items:
                      type: string
                    type: array
                  state:
                    description: The result of attempting to apply the policy to the
                      discovery resource.
                    enum:
                    - PENDING
                    - ACCEPTED
                    - INVALID
                    - FAILED
                    type: string
                  warnings:
                    description: Any warnings observed while processing the resource.
                    items:
                      type: string
                    type: array
                type: object
              description: |-
                The status of the TrafficPolicy for each selected Destination.
                A TrafficPolicy may be Accepted for some Destinations and rejected for others.
              type: object
            errors:
              description: Any errors found while processing this generation of the
                resource.
              items:
                type: string
              type: array
            observedGeneration:
              description: |-
                The most recent generation observed in the the TrafficPolicy metadata.
                If the `observedGeneration` does not match `metadata.generation`, Gloo Mesh has not processed the most
                recent version of this resource.
              format: int64
              type: integer
            state:
              description: |-
                The state of the overall resource.
                It will only show accepted if it has been successfully applied to all selected Destinations.
              enum:
              - PENDING
              - ACCEPTED
              - INVALID
              - FAILED
              type: string
            workloads:
              description: The list of selected Workloads for which this policy has
                been applied.
              items:
                type: string
              type: array
          type: object
      type: object
  versions:
  - name: v1
    served: true
    storage: true

---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  labels:
    app: gloo-mesh
    app.kubernetes.io/name: gloo-mesh
  name: accesspolicies.networking.mesh.gloo.solo.io
spec:
  group: networking.mesh.gloo.solo.io
  names:
    kind: AccessPolicy
    listKind: AccessPolicyList
    plural: accesspolicies
    singular: accesspolicy
  preserveUnknownFields: false
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      properties:
        spec:
          description: |-
            Grants communication permission between selected identities (i.e. traffic sources) and Destinations (i.e. destinations).
            Explicitly granted access permission is required if a
            [VirtualMesh's GlobalAccessPolicy]({{% versioned_link_path fromRoot="/reference/api/virtual_mesh/#networking.mesh.gloo.solo.io.VirtualMeshSpec.GlobalAccessPolicy" %}})
            is set to `ENABLED`.
          properties:
            allowedMethods:
              description: |-
                Optional. A list of HTTP methods to allow (e.g., "GET", "POST").
                       It is ignored in gRPC case because the value is always "POST".
                       If not specified, allows any method.
              items:
                type: string
              type: array
            allowedPaths:
              description: |-
                Optional. A list of HTTP paths or gRPC methods to allow.
                       gRPC methods must be presented as fully-qualified name in the form of
                       "/packageName.serviceName/methodName" and are case sensitive.
                       Exact match, prefix match, and suffix match are supported for paths.
                       For example, the path "/books/review" matches
                       "/books/review" (exact match), "*books/" (suffix match), or "/books*" (prefix match).

                       If not specified, allow any path.
              items:
                type: string
              type: array
            allowedPorts:
              description: |-
                Optional. A list of ports which to allow.
                       If not set any port is allowed.
              items:
                maximum: 4294967295
                minimum: 0
                type: integer
              type: array
            destinationSelector:
              description: |-
                Specify the Destinations for which to apply this AccessPolicy.
                Leave empty to apply the AccessPolicy to all Destinations.
              items:
                properties:
                  kubeServiceMatcher:
                    description: Match Kubernetes Services by their labels, namespaces,
                      and/or clusters.
                    properties:
                      clusters:
                        description: |-
                          If specified, match Kubernetes Services if they exist in one of the specified clusters.
                                     When used in a networking policy, omission matches any cluster.
                                     When used in a Gloo Mesh Role, a wildcard (`"*"`) must be specified to match any cluster.
                        items:
                          type: string
                        type: array
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          If specified, a match requires all labels to exist on a Kubernetes Service.
                                     When used in a networking policy, omission matches any labels.
                                     When used in a Gloo Mesh Role, a wildcard (`"*"`) must be specified to match any label key and/or value.
                        type: object
                      namespaces:
                        description: |-
                          If specified, match Kubernetes Services if they exist in one of the specified namespaces.
                                     When used in a networking policy, omission matches any namespace.
                                     When used in a Gloo Mesh Role, a wildcard (`"*"`) must be specified to match any namespace.
                        items:
                          type: string
                        type: array
                    type: object
                  kubeServiceRefs:
                    description: Match Kubernetes Services by direct reference.
                    properties:
                      services:
                        description: |-
                          Match Kubernetes Services by direct reference. All fields are required.
                                     When used in a Gloo Mesh Role, a wildcard (`"*"`) must be specified to match any value for the given field.
                        items:
                          properties:
                            clusterName:
                              description: name of the cluster in which the resource
                                exists
                              type: string
                            name:
                              description: name of the resource being referenced
                              type: string
                            namespace:
                              description: namespace of the resource being referenced
                              type: string
                          type: object
                        type: array
                    type: object
                type: object
              type: array
            sourceSelector:
              description: |-
                Specify the identities of Workloads (i.e. traffic sources) for which to apply this AccessPolicy.
                Leave empty to apply the AccessPolicy to all Workloads colocated in the destination's Mesh.
              items:
                properties:
                  kubeIdentityMatcher:
                    description: Match request identities based on the Kubernetes
                      namespace and cluster.
                    properties:
                      clusters:
                        description: |-
                          If specified, match a Kubernetes identity if it exists in one of the specified clusters.
                                     When used in a networking policy, omission matches any cluster.
                                     When used in a Gloo Mesh Role, a wildcard (`"*"`) must be specified to match any cluster.
                        items:
                          type: string
                        type: array
                      namespaces:
                        description: |-
                          If specified, match a Kubernetes identity if it exists in one of the specified namespaces.
                                     When used in a networking policy, omission matches any namespace.
                                     When used in a Gloo Mesh Role, a wildcard (`"*"`) must be specified to match any namespace.
                        items:
                          type: string
                        type: array
                    type: object
                  kubeServiceAccountRefs:
                    description: Match request identities based on the Kubernetes
                      service account of the request.
                    properties:
                      serviceAccounts:
                        description: |-
                          Match Kubernetes service accounts by direct reference.
                                     When used in a networking policy, omission of any field (name, namespace, or clusterName) allows matching any value for that field.
                                     When used in a Gloo Mesh Role, a wildcard (`"*"`) must be specified to match any value for the given field.
                        items:
                          properties:
                            clusterName:
                              description: name of the cluster in which the resource
                                exists
                              type: string
                            name:
                              description: name of the resource being referenced
                              type: string
                            namespace:
                              description: namespace of the resource being referenced
                              type: string
                          type: object
                        type: array
                    type: object
                type: object
              type: array
          type: object
        status:
          properties:
            destinations:
              additionalProperties:
                properties:
                  acceptanceOrder:
                    description: |-
                      Represents the order in which the policy
                      was accepted and applied to a discovery resource. The first accepted policy
                      will have an acceptance_order of 0, the second 1, etc.
                      When conflicts are detected in the system,
                      the Policy with the lowest acceptance_order
                      will be chosen and all other conflicting policies will be rejected.
                    maximum: 4294967295
                    minimum: 0
                    type: integer
                  errors:
                    description: Any errors observed which prevented the resource
                      from being Accepted.
                    items:
                      type: string
                    type: array
                  state:
                    description: The result of attempting to apply the policy to the
                      discovery resource.
                    enum:
                    - PENDING
                    - ACCEPTED
                    - INVALID
                    - FAILED
                    type: string
                  warnings:
                    description: Any warnings observed while processing the resource.
                    items:
                      type: string
                    type: array
                type: object
              description: |-
                The status of the AccessPolicy for each Destination to which it has been applied.
                An AccessPolicy may be accepted for some Destinations and rejected for others.
              type: object
            errors:
              description: Any errors found while processing this generation of the
                resource.
              items:
                type: string
              type: array
            observedGeneration:
              description: |-
                The most recent generation observed in the the AccessPolicy metadata.
                If the `observedGeneration` does not match `metadata.generation`, Gloo Mesh has not processed the most
                recent version of this resource.
              format: int64
              type: integer
            state:
              description: |-
                The state of the overall resource.
                It will only show accepted if it has been successfully applied to selected Destinations.
              enum:
              - PENDING
              - ACCEPTED
              - INVALID
              - FAILED
              type: string
            workloads:
              description: The list of Workloads to which this policy has been applied.
              items:
                type: string
              type: array
          type: object
      type: object
  versions:
  - name: v1
    served: true
    storage: true

---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  labels:
    app: gloo-mesh
    app.kubernetes.io/name: gloo-mesh
  name: virtualmeshes.networking.mesh.gloo.solo.io
spec:
  group: networking.mesh.gloo.solo.io
  names:
    kind: VirtualMesh
    listKind: VirtualMeshList
    plural: virtualmeshes
    singular: virtualmesh
  preserveUnknownFields: false
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      properties:
        spec:
          description: Represents a logical grouping of Meshes for shared configuration
            and cross-mesh interoperability.
          properties:
            federation:
              description: Specify how to federate Destinations across service mesh
                boundaries.
              oneOf:
              - not:
                  anyOf:
                  - required:
                    - permissive
              - required:
                - permissive
              properties:
                eastWestIngressGatewaySelectors:
                  description: |-
                    Selects the Destination(s) acting as ingress gateways for cross cluster traffic.
                    The supplied IngressGatewaySelectors will be used to select ingress gateways for all Meshes in this VirtualMesh.
                  items:
                    properties:
                      destinationSelectors:
                        description: |-
                          The set of Destinations that will be used as ingress gateways for external traffic entering the Mesh.
                          If omitted, a mesh-specific default ingress gateway destination will be used.
                          For Istio, any Kubernetes Service(s) with the label pair `{"istio": "ingressgateway"}` will be selected.
                        items:
                          properties:
                            kubeServiceMatcher:
                              description: Match Kubernetes Services by their labels,
                                namespaces, and/or clusters.
                              properties:
                                clusters:
                                  description: |-
                                    If specified, match Kubernetes Services if they exist in one of the specified clusters.
                                               When used in a networking policy, omission matches any cluster.
                                               When used in a Gloo Mesh Role, a wildcard (`"*"`) must be specified to match any cluster.
                                  items:
                                    type: string
                                  type: array
                                labels:
                                  additionalProperties:
                                    type: string
                                  description: |-
                                    If specified, a match requires all labels to exist on a Kubernetes Service.
                                               When used in a networking policy, omission matches any labels.
                                               When used in a Gloo Mesh Role, a wildcard (`"*"`) must be specified to match any label key and/or value.
                                  type: object
                                namespaces:
                                  description: |-
                                    If specified, match Kubernetes Services if they exist in one of the specified namespaces.
                                               When used in a networking policy, omission matches any namespace.
                                               When used in a Gloo Mesh Role, a wildcard (`"*"`) must be specified to match any namespace.
                                  items:
                                    type: string
                                  type: array
                              type: object
                            kubeServiceRefs:
                              description: Match Kubernetes Services by direct reference.
                              properties:
                                services:
                                  description: |-
                                    Match Kubernetes Services by direct reference. All fields are required.
                                               When used in a Gloo Mesh Role, a wildcard (`"*"`) must be specified to match any value for the given field.
                                  items:
                                    properties:
                                      clusterName:
                                        description: name of the cluster in which
                                          the resource exists
                                        type: string
                                      name:
                                        description: name of the resource being referenced
                                        type: string
                                      namespace:
                                        description: namespace of the resource being
                                          referenced
                                        type: string
                                    type: object
                                  type: array
                              type: object
                          type: object
                        type: array
                      portName:
                        description: Specify by name the TLS port on the ingress gateway
                          destination. If not specified, will default to "tls".
                        type: string
                    type: object
                  type: array
                flatNetwork:
                  description: |-
                    If true, all multicluster traffic will be routed directly to the Kubernetes service endpoints of the Destinations,
                    rather than through an ingress gateway. This mode requires a flat network environment.
                    This feature is exclusive to Gloo Mesh Enterprise.
                  type: boolean
                hostnameSuffix:
                  description: |-
                    Configure the suffix for hostnames of Destinations federated within this VirtualMesh.
                    Currently this is only supported for Istio with [smart DNS proxying enabled](https://istio.io/latest/blog/2020/dns-proxy/),
                    otherwise setting this field results in an error.
                    If omitted, the hostname suffix defaults to "global".
                  type: string
                permissive:
                  description: |-
                    DEPRECATED: Use `selectors` with an empty selector (i.e. `{}`) for permissive semantics.
                    Expose all Destinations to all Workloads in this VirtualMesh.
                  maxProperties: 0
                  type: object
                selectors:
                  description: |-
                    Selectively federate Destinations to specific external meshes.
                    If omitted, no Destinations will be federated.
                  items:
                    properties:
                      destinationSelectors:
                        description: |-
                          The set of Destinations that will be federated to external Meshes.
                          If omitted, all Destinations will be selected.
                        items:
                          properties:
                            kubeServiceMatcher:
                              description: Match Kubernetes Services by their labels,
                                namespaces, and/or clusters.
                              properties:
                                clusters:
                                  description: |-
                                    If specified, match Kubernetes Services if they exist in one of the specified clusters.
                                               When used in a networking policy, omission matches any cluster.
                                               When used in a Gloo Mesh Role, a wildcard (`"*"`) must be specified to match any cluster.
                                  items:
                                    type: string
                                  type: array
                                labels:
                                  additionalProperties:
                                    type: string
                                  description: |-
                                    If specified, a match requires all labels to exist on a Kubernetes Service.
                                               When used in a networking policy, omission matches any labels.
                                               When used in a Gloo Mesh Role, a wildcard (`"*"`) must be specified to match any label key and/or value.
                                  type: object
                                namespaces:
                                  description: |-
                                    If specified, match Kubernetes Services if they exist in one of the specified namespaces.
                                               When used in a networking policy, omission matches any namespace.
                                               When used in a Gloo Mesh Role, a wildcard (`"*"`) must be specified to match any namespace.
                                  items:
                                    type: string
                                  type: array
                              type: object
                            kubeServiceRefs:
                              description: Match Kubernetes Services by direct reference.
                              properties:
                                services:
                                  description: |-
                                    Match Kubernetes Services by direct reference. All fields are required.
                                               When used in a Gloo Mesh Role, a wildcard (`"*"`) must be specified to match any value for the given field.
                                  items:
                                    properties:
                                      clusterName:
                                        description: name of the cluster in which
                                          the resource exists
                                        type: string
                                      name:
                                        description: name of the resource being referenced
                                        type: string
                                      namespace:
                                        description: namespace of the resource being
                                          referenced
                                        type: string
                                    type: object
                                  type: array
                              type: object
                          type: object
                        type: array
                      meshes:
                        description: |-
                          The Meshes to which the selected Destinations will be federated. All referenced Meshes must exist in this VirtualMesh.
                          If omitted, the selected Destinations will be federated to all Meshes in the VirtualMesh.
                        items:
                          properties:
                            name:
                              description: name of the resource being referenced
                              type: string
                            namespace:
                              description: namespace of the resource being referenced
                              type: string
                          type: object
                        type: array
                    type: object
                  type: array
                tcpKeepalive:
                  description: |-
                    Specify a keepalive rule for all requests made within the VirtualMesh which cross clusters within that VirtualMesh,
                    as well as any requests to externalService type destinations.
                  properties:
                    interval:
                      description: |-
                        The time duration between keep-alive probes.
                        Format examples: `1h`/`1m`/`1s`/`1ms`
                      type: string
                    probes:
                      description: Maximum number of TCP keepalive probes to send
                        before determining that connection is dead.
                      maximum: 4294967295
                      minimum: 0
                      type: integer
                    time:
                      description: |-
                        The time duration a connection needs to be idle before keep-alive probes start being sent.
                        Format examples: `1h`/`1m`/`1s`/`1ms`.
                      type: string
                  type: object
              type: object
            globalAccessPolicy:
              description: Specify a global access policy for all Workloads and Destinations
                associated with this VirtualMesh.
              enum:
              - MESH_DEFAULT
              - ENABLED
              - DISABLED
              type: string
            meshes:
              description: Specify the Meshes configured by this VirtualMesh.
              items:
                properties:
                  name:
                    description: name of the resource being referenced
                    type: string
                  namespace:
                    description: namespace of the resource being referenced
                    type: string
                type: object
              type: array
            mtlsConfig:
              description: Specify mTLS options.
              oneOf:
              - not:
                  anyOf:
                  - properties:
                      shared:
                        oneOf:
                        - not:
                            anyOf:
                            - properties:
                                rootCertificateAuthority:
                                  oneOf:
                                  - not:
                                      anyOf:
                                      - required:
                                        - generated
                                      - required:
                                        - secret
                                  - required:
                                    - generated
                                  - required:
                                    - secret
                              required:
                              - rootCertificateAuthority
                            - properties:
                                intermediateCertificateAuthority:
                                  oneOf:
                                  - not:
                                      anyOf:
                                      - properties:
                                          vault:
                                            oneOf:
                                            - not:
                                                anyOf:
                                                - required:
                                                  - tokenSecretRef
                                                - properties:
                                                    kubernetesAuth:
                                                      oneOf:
                                                      - not:
                                                          anyOf:
                                                          - required:
                                                            - serviceAccountRef
                                                          - required:
                                                            - mountedSaPath
                                                      - required:
                                                        - serviceAccountRef
                                                      - required:
                                                        - mountedSaPath
                                                  required:
                                                  - kubernetesAuth
                                            - required:
                                              - tokenSecretRef
                                            - properties:
                                                kubernetesAuth:
                                                  oneOf:
                                                  - not:
                                                      anyOf:
                                                      - required:
                                                        - serviceAccountRef
                                                      - required:
                                                        - mountedSaPath
                                                  - required:
                                                    - serviceAccountRef
                                                  - required:
                                                    - mountedSaPath
                                              required:
                                              - kubernetesAuth
                                        required:
                                        - vault
                                  - properties:
                                      vault:
                                        oneOf:
                                        - not:
                                            anyOf:
                                            - required:
                                              - tokenSecretRef
                                            - properties:
                                                kubernetesAuth:
                                                  oneOf:
                                                  - not:
                                                      anyOf:
                                                      - required:
                                                        - serviceAccountRef
                                                      - required:
                                                        - mountedSaPath
                                                  - required:
                                                    - serviceAccountRef
                                                  - required:
                                                    - mountedSaPath
                                              required:
                                              - kubernetesAuth
                                        - required:
                                          - tokenSecretRef
                                        - properties:
                                            kubernetesAuth:
                                              oneOf:
                                              - not:
                                                  anyOf:
                                                  - required:
                                                    - serviceAccountRef
                                                  - required:
                                                    - mountedSaPath
                                              - required:
                                                - serviceAccountRef
                                              - required:
                                                - mountedSaPath
                                          required:
                                          - kubernetesAuth
                                    required:
                                    - vault
                              required:
                              - intermediateCertificateAuthority
                        - properties:
                            rootCertificateAuthority:
                              oneOf:
                              - not:
                                  anyOf:
                                  - required:
                                    - generated
                                  - required:
                                    - secret
                              - required:
                                - generated
                              - required:
                                - secret
                          required:
                          - rootCertificateAuthority
                        - properties:
                            intermediateCertificateAuthority:
                              oneOf:
                              - not:
                                  anyOf:
                                  - properties:
                                      vault:
                                        oneOf:
                                        - not:
                                            anyOf:
                                            - required:
                                              - tokenSecretRef
                                            - properties:
                                                kubernetesAuth:
                                                  oneOf:
                                                  - not:
                                                      anyOf:
                                                      - required:
                                                        - serviceAccountRef
                                                      - required:
                                                        - mountedSaPath
                                                  - required:
                                                    - serviceAccountRef
                                                  - required:
                                                    - mountedSaPath
                                              required:
                                              - kubernetesAuth
                                        - required:
                                          - tokenSecretRef
                                        - properties:
                                            kubernetesAuth:
                                              oneOf:
                                              - not:
                                                  anyOf:
                                                  - required:
                                                    - serviceAccountRef
                                                  - required:
                                                    - mountedSaPath
                                              - required:
                                                - serviceAccountRef
                                              - required:
                                                - mountedSaPath
                                          required:
                                          - kubernetesAuth
                                    required:
                                    - vault
                              - properties:
                                  vault:
                                    oneOf:
                                    - not:
                                        anyOf:
                                        - required:
                                          - tokenSecretRef
                                        - properties:
                                            kubernetesAuth:
                                              oneOf:
                                              - not:
                                                  anyOf:
                                                  - required:
                                                    - serviceAccountRef
                                                  - required:
                                                    - mountedSaPath
                                              - required:
                                                - serviceAccountRef
                                              - required:
                                                - mountedSaPath
                                          required:
                                          - kubernetesAuth
                                    - required:
                                      - tokenSecretRef
                                    - properties:
                                        kubernetesAuth:
                                          oneOf:
                                          - not:
                                              anyOf:
                                              - required:
                                                - serviceAccountRef
                                              - required:
                                                - mountedSaPath
                                          - required:
                                            - serviceAccountRef
                                          - required:
                                            - mountedSaPath
                                      required:
                                      - kubernetesAuth
                                required:
                                - vault
                          required:
                          - intermediateCertificateAuthority
                    required:
                    - shared
                  - required:
                    - limited
              - properties:
                  shared:
                    oneOf:
                    - not:
                        anyOf:
                        - properties:
                            rootCertificateAuthority:
                              oneOf:
                              - not:
                                  anyOf:
                                  - required:
                                    - generated
                                  - required:
                                    - secret
                              - required:
                                - generated
                              - required:
                                - secret
                          required:
                          - rootCertificateAuthority
                        - properties:
                            intermediateCertificateAuthority:
                              oneOf:
                              - not:
                                  anyOf:
                                  - properties:
                                      vault:
                                        oneOf:
                                        - not:
                                            anyOf:
                                            - required:
                                              - tokenSecretRef
                                            - properties:
                                                kubernetesAuth:
                                                  oneOf:
                                                  - not:
                                                      anyOf:
                                                      - required:
                                                        - serviceAccountRef
                                                      - required:
                                                        - mountedSaPath
                                                  - required:
                                                    - serviceAccountRef
                                                  - required:
                                                    - mountedSaPath
                                              required:
                                              - kubernetesAuth
                                        - required:
                                          - tokenSecretRef
                                        - properties:
                                            kubernetesAuth:
                                              oneOf:
                                              - not:
                                                  anyOf:
                                                  - required:
                                                    - serviceAccountRef
                                                  - required:
                                                    - mountedSaPath
                                              - required:
                                                - serviceAccountRef
                                              - required:
                                                - mountedSaPath
                                          required:
                                          - kubernetesAuth
                                    required:
                                    - vault
                              - properties:
                                  vault:
                                    oneOf:
                                    - not:
                                        anyOf:
                                        - required:
                                          - tokenSecretRef
                                        - properties:
                                            kubernetesAuth:
                                              oneOf:
                                              - not:
                                                  anyOf:
                                                  - required:
                                                    - serviceAccountRef
                                                  - required:
                                                    - mountedSaPath
                                              - required:
                                                - serviceAccountRef
                                              - required:
                                                - mountedSaPath
                                          required:
                                          - kubernetesAuth
                                    - required:
                                      - tokenSecretRef
                                    - properties:
                                        kubernetesAuth:
                                          oneOf:
                                          - not:
                                              anyOf:
                                              - required:
                                                - serviceAccountRef
                                              - required:
                                                - mountedSaPath
                                          - required:
                                            - serviceAccountRef
                                          - required:
                                            - mountedSaPath
                                      required:
                                      - kubernetesAuth
                                required:
                                - vault
                          required:
                          - intermediateCertificateAuthority
                    - properties:
                        rootCertificateAuthority:
                          oneOf:
                          - not:
                              anyOf:
                              - required:
                                - generated
                              - required:
                                - secret
                          - required:
                            - generated
                          - required:
                            - secret
                      required:
                      - rootCertificateAuthority
                    - properties:
                        intermediateCertificateAuthority:
                          oneOf:
                          - not:
                              anyOf:
                              - properties:
                                  vault:
                                    oneOf:
                                    - not:
                                        anyOf:
                                        - required:
                                          - tokenSecretRef
                                        - properties:
                                            kubernetesAuth:
                                              oneOf:
                                              - not:
                                                  anyOf:
                                                  - required:
                                                    - serviceAccountRef
                                                  - required:
                                                    - mountedSaPath
                                              - required:
                                                - serviceAccountRef
                                              - required:
                                                - mountedSaPath
                                          required:
                                          - kubernetesAuth
                                    - required:
                                      - tokenSecretRef
                                    - properties:
                                        kubernetesAuth:
                                          oneOf:
                                          - not:
                                              anyOf:
                                              - required:
                                                - serviceAccountRef
                                              - required:
                                                - mountedSaPath
                                          - required:
                                            - serviceAccountRef
                                          - required:
                                            - mountedSaPath
                                      required:
                                      - kubernetesAuth
                                required:
                                - vault
                          - properties:
                              vault:
                                oneOf:
                                - not:
                                    anyOf:
                                    - required:
                                      - tokenSecretRef
                                    - properties:
                                        kubernetesAuth:
                                          oneOf:
                                          - not:
                                              anyOf:
                                              - required:
                                                - serviceAccountRef
                                              - required:
                                                - mountedSaPath
                                          - required:
                                            - serviceAccountRef
                                          - required:
                                            - mountedSaPath
                                      required:
                                      - kubernetesAuth
                                - required:
                                  - tokenSecretRef
                                - properties:
                                    kubernetesAuth:
                                      oneOf:
                                      - not:
                                          anyOf:
                                          - required:
                                            - serviceAccountRef
                                          - required:
                                            - mountedSaPath
                                      - required:
                                        - serviceAccountRef
                                      - required:
                                        - mountedSaPath
                                  required:
                                  - kubernetesAuth
                            required:
                            - vault
                      required:
                      - intermediateCertificateAuthority
                required:
                - shared
              - required:
                - limited
              properties:
                autoRestartPods:
                  description: |-
                    Specify whether to allow Gloo Mesh to restart Kubernetes Pods when certificates are rotated when establishing shared trust.
                    If this option is not explicitly enabled,
                    users must restart Pods manually for the new certificates to be picked up.
                    `meshctl` provides the command `meshctl mesh restart` to simplify this process, see [here]({{< versioned_link_path fromRoot="reference/cli/meshctl_mesh_restart/" >}}) for more info.
                  type: boolean
                limited:
                  description: Limited trust (selectively allow communication between
                    Workloads and Destinations in the grouped Meshes). *Currently
                    not available.*
                  type: object
                rotationStrategy:
                  description: Type of rotation to use.
                  enum:
                  - MULTI_ROOT
                  - NONE
                  type: string
                rotationVerificationMethod:
                  description: Type of rotation verification to use when rotating
                    root certificates.
                  oneOf:
                  - not:
                      anyOf:
                      - required:
                        - none
                      - required:
                        - manual
                  - required:
                    - none
                  - required:
                    - manual
                  properties:
                    manual:
                      description: |-
                        Verification must be completed manually. This involves using our certificate verification
                        endpoint when the certificates are in a VERIFYING state
                      maxProperties: 0
                      type: object
                    none:
                      description: |-
                        Verification not enabled. NOTE: This setting is only recommended for testing.
                        When enabled rotation will continue from step to step without any kind of verification.
                      maxProperties: 0
                      type: object
                  type: object
                shared:
                  description: Shared trust (allow communication between any pair
                    of Workloads and Destinations in the grouped Meshes).
                  properties:
                    intermediateCertOptions:
                      description: Configuration options for generated intermediate
                        certs.
                      properties:
                        orgName:
                          description: Root cert organization name. Defaults to "gloo-mesh".
                          type: string
                        rsaKeySizeBytes:
                          description: Size in bytes of the root cert's private key.
                            Defaults to 4096.
                          maximum: 4294967295
                          minimum: 0
                          type: integer
                        secretRotationGracePeriodRatio:
                          description: |-
                            The ratio of cert lifetime to refresh a cert. For example, at 0.10 and 1 hour TTL,
                            we would refresh 6 minutes before expiration
                          format: float
                          type: number
                        ttlDays:
                          description: Number of days before root cert expires. Defaults
                            to 365.
                          maximum: 4294967295
                          minimum: 0
                          type: integer
                      type: object
                    intermediateCertificateAuthority:
                      description: |-
                        Configures an Intermediate Certificiate Authority which remote clusters will use to generate intermediate
                        certificates. In order for this to properly mesh all of the traffic across the different meshes, the CA
                        being used must be configured to generate the intermediate certificates.
                      properties:
                        vault:
                          description: Use vault as the intermediate CA source
                          properties:
                            caBundle:
                              description: |-
                                PEM encoded CA bundle used to validate Vault server certificate. Only used
                                if the Server URL is using HTTPS protocol. This parameter is ignored for
                                plain HTTP protocol connection. If not set the system root certificates
                                are used to validate the TLS connection.
                              format: binary
                              type: string
                            caPath:
                              description: |-
                                `ca_path` is the mount path of the Vault PKI backend's `sign` endpoint, e.g:
                                "my_pki_mount/sign/my-role-name".
                              type: string
                            csrPath:
                              description: |-
                                `csr_path` is the mount path of the Vault PKI backend's `generate` endpoint, e.g:
                                "my_pki_mount/intermediate/generate/exported".
                                "exported" is necessary here as istio needs access to the private key
                                See vault docs here: https://www.vaultproject.io/api-docs/secret/pki#parameters-4
                              type: string
                            kubernetesAuth:
                              description: |-
                                Kubernetes authenticates with Vault by passing the ServiceAccount
                                token stored in the named Secret resource to the Vault server.
                              properties:
                                mountPath:
                                  description: |-
                                    The Vault mountPath here is the mount path to use when authenticating with
                                    Vault. For example, setting a value to `/v1/auth/foo`, will use the path
                                    `/v1/auth/foo/login` to authenticate with Vault. If unspecified, the
                                    default value "/v1/auth/kubernetes" will be used.
                                  type: string
                                mountedSaPath:
                                  description: |-
                                    File System path to grab the service account token from.
                                    Defaults to /var/run/secrets/kubernetes.io/serviceaccount
                                  type: string
                                role:
                                  description: |-
                                    A required field containing the Vault Role to assume. A Role binds a
                                    Kubernetes ServiceAccount with a set of Vault policies.
                                  type: string
                                secretTokenKey:
                                  description: |-
                                    Key to search for the sa_token
                                    Default to "token"
                                  type: string
                                serviceAccountRef:
                                  description: Reference to service account, other
                                    than the one mounted to the current pod.
                                  properties:
                                    name:
                                      description: name of the resource being referenced
                                      type: string
                                    namespace:
                                      description: namespace of the resource being
                                        referenced
                                      type: string
                                  type: object
                              type: object
                            namespace:
                              description: |-
                                Name of the vault namespace. Namespaces is a set of features within Vault Enterprise that allows Vault environments to support Secure Multi-tenancy. e.g: "ns1"
                                More about namespaces can be found [here](https://www.vaultproject.io/docs/enterprise/namespaces)
                              type: string
                            server:
                              description: 'Server is the connection address for the
                                Vault server, e.g: "https://vault.example.com:8200".'
                              type: string
                            tokenSecretRef:
                              description: TokenSecretRef authenticates with Vault
                                by presenting a token.
                              properties:
                                name:
                                  description: name of the resource being referenced
                                  type: string
                                namespace:
                                  description: namespace of the resource being referenced
                                  type: string
                              type: object
                          type: object
                      type: object
                    rootCertificateAuthority:
                      description: |-
                        Configure a Root Certificate Authority which will be shared by all Meshes associated with this VirtualMesh.
                        If this is not provided, a self-signed certificate will be generated by Gloo Mesh.
                      properties:
                        generated:
                          description: Generate a self-signed root certificate with
                            the given options.
                          properties:
                            orgName:
                              description: Root cert organization name. Defaults to
                                "gloo-mesh".
                              type: string
                            rsaKeySizeBytes:
                              description: Size in bytes of the root cert's private
                                key. Defaults to 4096.
                              maximum: 4294967295
                              minimum: 0
                              type: integer
                            secretRotationGracePeriodRatio:
                              description: |-
                                The ratio of cert lifetime to refresh a cert. For example, at 0.10 and 1 hour TTL,
                                we would refresh 6 minutes before expiration
                              format: float
                              type: number
                            ttlDays:
                              description: Number of days before root cert expires.
                                Defaults to 365.
                              maximum: 4294967295
                              minimum: 0
                              type: integer
                          type: object
                        secret:
                          description: |-
                            Reference to a Kubernetes Secret containing the root certificate authority.
                            Provided secrets must conform to a specified format, [documented here]({{< versioned_link_path fromRoot="/guides/federate_identity/" >}}).
                          properties:
                            name:
                              description: name of the resource being referenced
                              type: string
                            namespace:
                              description: namespace of the resource being referenced
                              type: string
                          type: object
                      type: object
                  type: object
              type: object
          type: object
        status:
          properties:
            conditions:
              description: List of rotation conditions which have been completed/carried
                out for this Virtual Mesh
              items:
                properties:
                  errors:
                    description: Any errors which occurred during the current rotation
                      stage
                    items:
                      type: string
                    type: array
                  message:
                    description: A human readable message related to the current condition
                    type: string
                  state:
                    description: The current state of the cert rotation
                    enum:
                    - NOT_APPLICABLE
                    - ADDING_NEW_ROOT
                    - PROPAGATING_NEW_INTERMEDIATE
                    - DELETING_OLD_ROOT
                    - VERIFYING
                    - VERIFIED
                    - ROLLING_BACK
                    - FINISHED
                    - FAILED
                    type: string
                  timestamp:
                    description: The time at which this condition was recorded
                    type: string
                type: object
              type: array
            destinations:
              additionalProperties:
                properties:
                  acceptanceOrder:
                    description: |-
                      Represents the order in which the policy
                      was accepted and applied to a discovery resource. The first accepted policy
                      will have an acceptance_order of 0, the second 1, etc.
                      When conflicts are detected in the system,
                      the Policy with the lowest acceptance_order
                      will be chosen and all other conflicting policies will be rejected.
                    maximum: 4294967295
                    minimum: 0
                    type: integer
                  errors:
                    description: Any errors observed which prevented the resource
                      from being Accepted.
                    items:
                      type: string
                    type: array
                  state:
                    description: The result of attempting to apply the policy to the
                      discovery resource.
                    enum:
                    - PENDING
                    - ACCEPTED
                    - INVALID
                    - FAILED
                    type: string
                  warnings:
                    description: Any warnings observed while processing the resource.
                    items:
                      type: string
                    type: array
                type: object
              description: |-
                The status of the VirtualMesh for each Destination to which it has been applied.
                A VirtualMesh may be Accepted for some Destinations and rejected for others.
              type: object
            errors:
              description: Any errors found while processing this generation of the
                resource.
              items:
                type: string
              type: array
            meshes:
              additionalProperties:
                properties:
                  acceptanceOrder:
                    description: |-
                      Represents the order in which the policy
                      was accepted and applied to a discovery resource. The first accepted policy
                      will have an acceptance_order of 0, the second 1, etc.
                      When conflicts are detected in the system,
                      the Policy with the lowest acceptance_order
                      will be chosen and all other conflicting policies will be rejected.
                    maximum: 4294967295
                    minimum: 0
                    type: integer
                  errors:
                    description: Any errors observed which prevented the resource
                      from being Accepted.
                    items:
                      type: string
                    type: array
                  state:
                    description: The result of attempting to apply the policy to the
                      discovery resource.
                    enum:
                    - PENDING
                    - ACCEPTED
                    - INVALID
                    - FAILED
                    type: string
                  warnings:
                    description: Any warnings observed while processing the resource.
                    items:
                      type: string
                    type: array
                type: object
              description: |-
                The status of the VirtualMesh for each Mesh to which it has been applied.
                A VirtualMesh may be Accepted for some Meshes and rejected for others.
              type: object
            observedGeneration:
              description: |-
                The most recent generation observed in the the VirtualMesh metadata.
                If the `observedGeneration` does not match `metadata.generation`, Gloo Mesh has not processed the most
                recent version of this resource.
              format: int64
              type: integer
            state:
              description: |-
                The state of the overall resource. It will only show accepted if it has been successfully
                applied to all selected Meshes.
              enum:
              - PENDING
              - ACCEPTED
              - INVALID
              - FAILED
              type: string
          type: object
      type: object
  versions:
  - name: v1
    served: true
    storage: true
