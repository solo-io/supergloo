# Code generated by skv2. DO NOT EDIT.

apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  labels:
    app: gloo-mesh
    app.kubernetes.io/name: gloo-mesh
  name: destinations.discovery.mesh.gloo.solo.io
spec:
  group: discovery.mesh.gloo.solo.io
  names:
    kind: Destination
    listKind: DestinationList
    plural: destinations
    singular: destination
  preserveUnknownFields: false
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      properties:
        spec:
          description: The Destination is an abstraction for any entity capable of
            receiving networking requests.
          oneOf:
          - not:
              anyOf:
              - required:
                - kubeService
              - required:
                - externalService
          - required:
            - kubeService
          - required:
            - externalService
          properties:
            externalService:
              description: |-
                ExternalService is a Destination representing a service
                external to the Mesh. It can be used to expose a given hostname
                or IP address to all clusters in the Virtual Mesh.
              properties:
                addresses:
                  description: |-
                    The List of addresses which will resolve to this service for
                    services within the Virtual Mesh.
                  items:
                    type: string
                  type: array
                endpoints:
                  description: |-
                    List of endpoints, to which any requests to this Destionation
                    will be load balanced across.
                  items:
                    properties:
                      address:
                        description: The address of the external service. Can be a
                          domain or an IP.
                        type: string
                      ports:
                        additionalProperties:
                          maximum: 4294967295
                          minimum: 0
                          type: integer
                        description: 'The port(s) of the external endpoint. Eg: `https:
                          443`'
                        type: object
                    type: object
                  type: array
                hosts:
                  description: |-
                    The list of hosts which will resolve to this Destination for
                    services within the Virtual Mesh.
                  items:
                    type: string
                  type: array
                name:
                  description: The name of the service
                  type: string
                ports:
                  description: The associated ports of the external service
                  items:
                    properties:
                      name:
                        description: A label for the port, eg "http"
                        type: string
                      number:
                        description: The port number. Must be a valid, non-negative
                          integer port number.
                        maximum: 4294967295
                        minimum: 0
                        type: integer
                      protocol:
                        description: |-
                          The protocol used in communications with this Destination
                          MUST BE one of HTTP|HTTPS|GRPC|HTTP2|MONGO|TCP|TLS.
                        type: string
                    type: object
                  type: array
              type: object
            kubeService:
              description: |-
                KubeService is a kube-native Destination representing a kubernetes
                service running inside of a kubernetes cluster.
              properties:
                endpointSubsets:
                  description: |-
                    Each endpoints subset is a group of endpoints arranged in terms of IP/port pairs.
                    This API mirrors the [Kubernetes Endpoints API](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.20/#endpoints-v1-core).
                  items:
                    properties:
                      endpoints:
                        items:
                          properties:
                            ipAddress:
                              type: string
                            labels:
                              additionalProperties:
                                type: string
                              description: Labels which belong to this IP. These are
                                taken from the backing workload instance.
                              type: object
                            subLocality:
                              description: The zone and sub-zone (if controlled by
                                Istio) of the endpoint.
                              properties:
                                subZone:
                                  description: A subdivision of zone. Only applies
                                    to Istio-controlled Destinations, see [here](https://istio.io/latest/docs/tasks/traffic-management/locality-load-balancing/)
                                    for more information.
                                  type: string
                                zone:
                                  description: A subdivision of a geographical region,
                                    see [here](https://kubernetes.io/docs/reference/labels-annotations-taints/#topologykubernetesiozone)
                                    for more information.
                                  type: string
                              type: object
                          type: object
                        type: array
                      ports:
                        items:
                          properties:
                            appProtocol:
                              description: Available in Kubernetes 1.18+, describes
                                the application protocol.
                              type: string
                            name:
                              description: Name of the port
                              type: string
                            port:
                              description: Port on which the endpoints can be reached
                              maximum: 4294967295
                              minimum: 0
                              type: integer
                            protocol:
                              description: Protocol on which this port serves traffic
                                (HTTP, TCP, UDP, etc...)
                              type: string
                          type: object
                        type: array
                    type: object
                  type: array
                externalAddresses:
                  description: Describes the address data for Kubernetes Services
                    exposed to external traffic (i.e. for non ClusterIP type Services).
                  items:
                    oneOf:
                    - not:
                        anyOf:
                        - required:
                          - dnsName
                        - required:
                          - ip
                    - required:
                      - dnsName
                    - required:
                      - ip
                    properties:
                      dnsName:
                        description: An externally accessible DNS name.
                        type: string
                      ip:
                        description: An externally accessible IP address.
                        type: string
                    type: object
                  type: array
                labels:
                  additionalProperties:
                    type: string
                  description: Labels on the Kubernetes service.
                  type: object
                ports:
                  description: The ports exposed by the underlying service.
                  items:
                    oneOf:
                    - not:
                        anyOf:
                        - required:
                          - targetPortName
                        - required:
                          - targetPortNumber
                    - required:
                      - targetPortName
                    - required:
                      - targetPortNumber
                    properties:
                      appProtocol:
                        description: Available in Kubernetes 1.18+, describes the
                          application protocol.
                        type: string
                      name:
                        description: Name of the port
                        type: string
                      nodePort:
                        description: Populated for NodePort or LoadBalancer Services.
                        maximum: 4294967295
                        minimum: 0
                        type: integer
                      port:
                        description: External-facing port for this Kubernetes service
                          (*not* the service's target port on the targeted pods).
                        maximum: 4294967295
                        minimum: 0
                        type: integer
                      protocol:
                        description: Protocol on which this port serves traffic (HTTP,
                          TCP, UDP, etc...)
                        type: string
                      targetPortName:
                        description: Name of the target port
                        type: string
                      targetPortNumber:
                        description: Number of the target port
                        maximum: 4294967295
                        minimum: 0
                        type: integer
                    type: object
                  type: array
                ref:
                  description: Reference to the Kubernetes service object.
                  properties:
                    clusterName:
                      description: name of the cluster in which the resource exists
                      type: string
                    name:
                      description: name of the resource being referenced
                      type: string
                    namespace:
                      description: namespace of the resource being referenced
                      type: string
                  type: object
                region:
                  description: The region the service resides in, typically representing
                    a large geographic area.
                  type: string
                serviceType:
                  description: Describes the Kubernetes Service type.
                  enum:
                  - CLUSTER_IP
                  - NODE_PORT
                  - LOAD_BALANCER
                  - EXTERNAL_NAME
                  type: string
                subsets:
                  additionalProperties:
                    properties:
                      values:
                        items:
                          type: string
                        type: array
                    type: object
                  description: Subsets for routing, based on labels.
                  type: object
                workloadSelectorLabels:
                  additionalProperties:
                    type: string
                  description: Selectors for the set of pods targeted by the Kubernetes
                    service.
                  type: object
              type: object
            mesh:
              description: |-
                The mesh that controls this Destination. Can be omitted if the
                Destination isn't associated with any particular mesh, eg for External Services.
              properties:
                name:
                  description: name of the resource being referenced
                  type: string
                namespace:
                  description: namespace of the resource being referenced
                  type: string
              type: object
          type: object
        status:
          properties:
            appliedAccessPolicies:
              description: The set of AccessPolicies that have been applied to this
                Destination.
              items:
                properties:
                  observedGeneration:
                    description: The observed generation of the accepted AccessPolicy.
                    format: int64
                    type: integer
                  ref:
                    description: Reference to the AccessPolicy object.
                    properties:
                      name:
                        description: name of the resource being referenced
                        type: string
                      namespace:
                        description: namespace of the resource being referenced
                        type: string
                    type: object
                  spec:
                    description: The spec of the last known valid AccessPolicy.
                    properties:
                      allowedMethods:
                        description: |-
                          Optional. A list of HTTP methods to allow (e.g., "GET", "POST").
                                 It is ignored in gRPC case because the value is always "POST".
                                 If not specified, allows any method.
                        items:
                          type: string
                        type: array
                      allowedPaths:
                        description: |-
                          Optional. A list of HTTP paths or gRPC methods to allow.
                                 gRPC methods must be presented as fully-qualified name in the form of
                                 "/packageName.serviceName/methodName" and are case sensitive.
                                 Exact match, prefix match, and suffix match are supported for paths.
                                 For example, the path "/books/review" matches
                                 "/books/review" (exact match), "*books/" (suffix match), or "/books*" (prefix match).

                                 If not specified, allow any path.
                        items:
                          type: string
                        type: array
                      allowedPorts:
                        description: |-
                          Optional. A list of ports which to allow.
                                 If not set any port is allowed.
                        items:
                          maximum: 4294967295
                          minimum: 0
                          type: integer
                        type: array
                      destinationSelector:
                        description: |-
                          Specify the Destinations for which to apply this AccessPolicy.
                          Leave empty to apply the AccessPolicy to all Destinations.
                        items:
                          properties:
                            kubeServiceMatcher:
                              description: Match Kubernetes Services by their labels,
                                namespaces, and/or clusters.
                              properties:
                                clusters:
                                  description: |-
                                    If specified, match Kubernetes Services if they exist in one of the specified clusters.
                                               When used in a networking policy, omission matches any cluster.
                                               When used in a Gloo Mesh Role, a wildcard (`"*"`) must be specified to match any cluster.
                                  items:
                                    type: string
                                  type: array
                                labels:
                                  additionalProperties:
                                    type: string
                                  description: |-
                                    If specified, a match requires all labels to exist on a Kubernetes Service.
                                               When used in a networking policy, omission matches any labels.
                                               When used in a Gloo Mesh Role, a wildcard (`"*"`) must be specified to match any label key and/or value.
                                  type: object
                                namespaces:
                                  description: |-
                                    If specified, match Kubernetes Services if they exist in one of the specified namespaces.
                                               When used in a networking policy, omission matches any namespace.
                                               When used in a Gloo Mesh Role, a wildcard (`"*"`) must be specified to match any namespace.
                                  items:
                                    type: string
                                  type: array
                              type: object
                            kubeServiceRefs:
                              description: Match Kubernetes Services by direct reference.
                              properties:
                                services:
                                  description: |-
                                    Match Kubernetes Services by direct reference. All fields are required.
                                               When used in a Gloo Mesh Role, a wildcard (`"*"`) must be specified to match any value for the given field.
                                  items:
                                    properties:
                                      clusterName:
                                        description: name of the cluster in which
                                          the resource exists
                                        type: string
                                      name:
                                        description: name of the resource being referenced
                                        type: string
                                      namespace:
                                        description: namespace of the resource being
                                          referenced
                                        type: string
                                    type: object
                                  type: array
                              type: object
                          type: object
                        type: array
                      sourceSelector:
                        description: |-
                          Specify the identities of Workloads (i.e. traffic sources) for which to apply this AccessPolicy.
                          Leave empty to apply the AccessPolicy to all Workloads colocated in the destination's Mesh.
                        items:
                          properties:
                            kubeIdentityMatcher:
                              description: Match request identities based on the Kubernetes
                                namespace and cluster.
                              properties:
                                clusters:
                                  description: |-
                                    If specified, match a Kubernetes identity if it exists in one of the specified clusters.
                                               When used in a networking policy, omission matches any cluster.
                                               When used in a Gloo Mesh Role, a wildcard (`"*"`) must be specified to match any cluster.
                                  items:
                                    type: string
                                  type: array
                                namespaces:
                                  description: |-
                                    If specified, match a Kubernetes identity if it exists in one of the specified namespaces.
                                               When used in a networking policy, omission matches any namespace.
                                               When used in a Gloo Mesh Role, a wildcard (`"*"`) must be specified to match any namespace.
                                  items:
                                    type: string
                                  type: array
                              type: object
                            kubeServiceAccountRefs:
                              description: Match request identities based on the Kubernetes
                                service account of the request.
                              properties:
                                serviceAccounts:
                                  description: |-
                                    Match Kubernetes service accounts by direct reference.
                                               When used in a networking policy, omission of any field (name, namespace, or clusterName) allows matching any value for that field.
                                               When used in a Gloo Mesh Role, a wildcard (`"*"`) must be specified to match any value for the given field.
                                  items:
                                    properties:
                                      clusterName:
                                        description: name of the cluster in which
                                          the resource exists
                                        type: string
                                      name:
                                        description: name of the resource being referenced
                                        type: string
                                      namespace:
                                        description: namespace of the resource being
                                          referenced
                                        type: string
                                    type: object
                                  type: array
                              type: object
                          type: object
                        type: array
                    type: object
                type: object
              type: array
            appliedFederation:
              description: Federation metadata. Only populated if this Destination
                is federated through a VirtualMesh.
              properties:
                federatedHostname:
                  description: |-
                    For any Workload that this Destination has been federated to (i.e., any Workload controlled by a Mesh whose reference appears in `federated_to_meshes`),
                               that Workload will be able to reach this Destination using this DNS name.
                               For Kubernetes Destinations this includes Workloads on clusters other than the one hosting this Destination.
                  type: string
                federatedToMeshes:
                  description: The list of Meshes which are able to resolve this Destination's
                    `federated_hostname`.
                  items:
                    properties:
                      name:
                        description: name of the resource being referenced
                        type: string
                      namespace:
                        description: namespace of the resource being referenced
                        type: string
                    type: object
                  type: array
                flatNetwork:
                  description: |-
                    Whether the Destination has been federated to the given meshes using a VirtualMesh where
                    [Federation.FlatNetwork]({{< versioned_link_path fromRoot="/reference/api/github.com.solo-io.gloo-mesh.api.networking.v1.virtual_mesh/#virtualmeshspecfederation" >}})
                    is true.
                  type: boolean
                tcpKeepalive:
                  description: |-
                    Specify a keepalive rule for all requests made within the VirtualMesh which cross clusters within that VirtualMesh,
                    as well as any requests to externalService type destinations.
                  properties:
                    interval:
                      description: |-
                        The time duration between keep-alive probes.
                        Format examples: `1h`/`1m`/`1s`/`1ms`
                      type: string
                    probes:
                      description: Maximum number of TCP keepalive probes to send
                        before determining that connection is dead.
                      maximum: 4294967295
                      minimum: 0
                      type: integer
                    time:
                      description: |-
                        The time duration a connection needs to be idle before keep-alive probes start being sent.
                        Format examples: `1h`/`1m`/`1s`/`1ms`.
                      type: string
                  type: object
                virtualMeshRef:
                  description: Reference to the VirtualMesh object.
                  properties:
                    name:
                      description: name of the resource being referenced
                      type: string
                    namespace:
                      description: namespace of the resource being referenced
                      type: string
                  type: object
              type: object
            appliedTrafficPolicies:
              description: |-
                The set of TrafficPolicies that have been applied to this Destination.
                {{/* Note: validation of this field disabled because it slows down cue tremendously*/}}
              items:
                type: object
                x-kubernetes-preserve-unknown-fields: true
              type: array
            localFqdn:
              description: |-
                The fully qualified domain name for requests originating from a source *coloated* with this Destination.
                For Kubernetes services, "colocated" means within the same Kubernetes cluster.
              type: string
            observedGeneration:
              description: |-
                The most recent generation observed in the the TrafficPolicy metadata.
                If the `observedGeneration` does not match `metadata.generation`, Gloo Mesh has not processed the most
                recent version of this resource.
              format: int64
              type: integer
            requiredSubsets:
              description: The set of TrafficPolicy traffic shifts that reference
                subsets on this Destination.
              items:
                properties:
                  observedGeneration:
                    description: The observed generation of the TrafficPolicy.
                    format: int64
                    type: integer
                  trafficPolicyRef:
                    description: Reference to the TrafficPolicy object.
                    properties:
                      name:
                        description: name of the resource being referenced
                        type: string
                      namespace:
                        description: namespace of the resource being referenced
                        type: string
                    type: object
                  trafficShift:
                    description: The applied traffic shift.
                    properties:
                      destinations:
                        description: Specify weighted traffic shift destinations.
                        items:
                          oneOf:
                          - not:
                              anyOf:
                              - required:
                                - kubeService
                              - required:
                                - virtualDestination
                              - required:
                                - staticDestination
                              - required:
                                - clusterHeader
                          - required:
                            - kubeService
                          - required:
                            - virtualDestination
                          - required:
                            - staticDestination
                          - required:
                            - clusterHeader
                          properties:
                            clusterHeader:
                              description: |-
                                Envoy will determine the cluster to route to by reading the value of the HTTP header named by cluster_header from the request headers.
                                If the header is not found or the referenced cluster does not exist, Envoy will return a 404 response.
                                Avoid using this whenever possible, it does not allow for custom filter configuration based on Virtual Host.
                                {{/* NOTE: unimplemented */}}
                              type: string
                            kubeService:
                              description: Specify a Kubernetes Service.
                              properties:
                                clusterName:
                                  description: The Gloo Mesh cluster name (registration
                                    name) of the service.
                                  type: string
                                name:
                                  description: The name of the service.
                                  type: string
                                namespace:
                                  description: The namespace of the service.
                                  type: string
                                port:
                                  description: Port on the service to receive traffic.
                                    Required if the service exposes more than one
                                    port.
                                  maximum: 4294967295
                                  minimum: 0
                                  type: integer
                                subset:
                                  additionalProperties:
                                    type: string
                                  description: Specify, by labels, a subset of service
                                    instances to route to.
                                  type: object
                              type: object
                            options:
                              description: |-
                                additional options / config for a route which will be applied
                                when this destination is selected.
                              properties:
                                headerManipulation:
                                  description: manipualte headers on traffic sent
                                    to this destination
                                  properties:
                                    appendRequestHeaders:
                                      additionalProperties:
                                        type: string
                                      description: Additional HTTP headers to add
                                        before forwarding a request to the destination
                                        service.
                                      type: object
                                    appendResponseHeaders:
                                      additionalProperties:
                                        type: string
                                      description: Additional HTTP headers to add
                                        before returning a response to the caller.
                                      type: object
                                    removeRequestHeaders:
                                      description: HTTP headers to remove before forwarding
                                        a request to the destination service.
                                      items:
                                        type: string
                                      type: array
                                    removeResponseHeaders:
                                      description: HTTP headers to remove before returning
                                        a response to the caller.
                                      items:
                                        type: string
                                      type: array
                                  type: object
                              type: object
                            staticDestination:
                              description: Reference to a gloo mesh Static Destination
                              properties:
                                name:
                                  description: name of the resource being referenced
                                  type: string
                                namespace:
                                  description: namespace of the resource being referenced
                                  type: string
                              type: object
                            virtualDestination:
                              description: Specify a VirtualDestination.
                              properties:
                                name:
                                  description: The name of the VirtualDestination
                                    object.
                                  type: string
                                namespace:
                                  description: The namespace of the VirtualDestination
                                    object.
                                  type: string
                                subset:
                                  additionalProperties:
                                    type: string
                                  description: Specify, by labels, a subset of service
                                    instances backing the VirtualDestination to route
                                    to.
                                  type: object
                              type: object
                            weight:
                              description: |-
                                Specify the proportion of traffic to be forwarded to this destination.
                                Weights across all of the `destinations` must sum to 100.
                              maximum: 4294967295
                              minimum: 0
                              type: integer
                          type: object
                        type: array
                    type: object
                type: object
              type: array
          type: object
      type: object
  versions:
  - name: v1
    served: true
    storage: true

---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  labels:
    app: gloo-mesh
    app.kubernetes.io/name: gloo-mesh
  name: workloads.discovery.mesh.gloo.solo.io
spec:
  group: discovery.mesh.gloo.solo.io
  names:
    kind: Workload
    listKind: WorkloadList
    plural: workloads
    singular: workload
  preserveUnknownFields: false
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      properties:
        spec:
          description: Describes a workload controlled by a discovered service mesh.
          oneOf:
          - not:
              anyOf:
              - required:
                - kubernetes
          - required:
            - kubernetes
          properties:
            appMesh:
              description: Metadata specific to an App Mesh controlled workload.
              properties:
                ports:
                  description: Ports exposed by this workload. Needed for declaring
                    App Mesh VirtualNode listeners.
                  items:
                    properties:
                      port:
                        maximum: 4294967295
                        minimum: 0
                        type: integer
                      protocol:
                        type: string
                    type: object
                  type: array
                virtualNodeName:
                  description: The value of the env var APPMESH_VIRTUAL_NODE_NAME
                    on the App Mesh envoy proxy container.
                  type: string
              type: object
            kubernetes:
              description: Information describing workloads backed by Kubernetes Pods.
              properties:
                controller:
                  description: Resource reference to the Kubernetes Pod controller
                    (i.e. Deployment, ReplicaSet, DaemonSet) for this Workload..
                  properties:
                    clusterName:
                      description: name of the cluster in which the resource exists
                      type: string
                    name:
                      description: name of the resource being referenced
                      type: string
                    namespace:
                      description: namespace of the resource being referenced
                      type: string
                  type: object
                podLabels:
                  additionalProperties:
                    type: string
                  description: Labels on the Pod itself (read from `metadata.labels`),
                    which are used to determine which Services front this workload.
                  type: object
                serviceAccountName:
                  description: Service account associated with the Pods owned by this
                    controller.
                  type: string
              type: object
            mesh:
              description: The Mesh with which this Workload is associated.
              properties:
                name:
                  description: name of the resource being referenced
                  type: string
                namespace:
                  description: namespace of the resource being referenced
                  type: string
              type: object
          type: object
        status:
          properties:
            appliedAccessLogRecords:
              description: The set of AccessLogRecords that have been applied to this
                Workload.
              items:
                properties:
                  errors:
                    description: Any errors encountered while processing the AccessLogRecord
                      object
                    items:
                      type: string
                    type: array
                  observedGeneration:
                    description: The observed generation of the accepted AccessLogRecord.
                    format: int64
                    type: integer
                  ref:
                    description: Reference to the AccessLogRecord object.
                    properties:
                      name:
                        description: name of the resource being referenced
                        type: string
                      namespace:
                        description: namespace of the resource being referenced
                        type: string
                    type: object
                type: object
              type: array
            appliedWasmDeployments:
              description: The set of WasmDeployments that have been applied to this
                Workload.
              items:
                properties:
                  errors:
                    description: Any errors encountered while processing the WasmDeployment
                      object.
                    items:
                      type: string
                    type: array
                  observedGeneration:
                    description: The observed generation of the WasmDeployment.
                    format: int64
                    type: integer
                  ref:
                    description: Reference to the WasmDeployment object.
                    properties:
                      name:
                        description: name of the resource being referenced
                        type: string
                      namespace:
                        description: namespace of the resource being referenced
                        type: string
                    type: object
                type: object
              type: array
            observedGeneration:
              description: |-
                The observed generation of the Workload.
                When this matches the Workload's `metadata.generation` it indicates that Gloo Mesh
                has processed the latest version of the Workload.
              format: int64
              type: integer
            serviceDependencies:
              description: |-
                Specifies the [ServiceDependencies]({{< versioned_link_path fromRoot="/reference/api/github.com.solo-io.gloo-mesh.api.enterprise.networking.v1alpha1.service_dependency/" >}})
                that apply to this Workload, and the resulting Destination hostnames that this Workload can send traffic to.
              properties:
                appliedServiceDependencies:
                  description: The set of [ServiceDependencies]({{< versioned_link_path
                    fromRoot="/reference/api/github.com.solo-io.gloo-mesh.api.enterprise.networking.v1alpha1.service_dependency/"
                    >}}) that have been applied to this Workload.
                  items:
                    properties:
                      observedGeneration:
                        description: The observed generation of the ServiceDependency.
                        format: int64
                        type: integer
                      serviceDependencyRef:
                        description: Reference to the ServiceDependency object.
                        properties:
                          name:
                            description: name of the resource being referenced
                            type: string
                          namespace:
                            description: namespace of the resource being referenced
                            type: string
                        type: object
                    type: object
                  type: array
                destinationHostnames:
                  description: The set of Destination hostnames that this Workload
                    depends on.
                  items:
                    type: string
                  type: array
              type: object
          type: object
      type: object
  versions:
  - name: v1
    served: true
    storage: true

---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  labels:
    app: gloo-mesh
    app.kubernetes.io/name: gloo-mesh
  name: meshes.discovery.mesh.gloo.solo.io
spec:
  group: discovery.mesh.gloo.solo.io
  names:
    kind: Mesh
    listKind: MeshList
    plural: meshes
    singular: mesh
  preserveUnknownFields: false
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      properties:
        spec:
          description: Describes a service mesh control plane deployment.
          oneOf:
          - not:
              anyOf:
              - required:
                - istio
              - required:
                - awsAppMesh
              - required:
                - linkerd
              - required:
                - consulConnect
              - required:
                - osm
          - required:
            - istio
          - required:
            - awsAppMesh
          - required:
            - linkerd
          - required:
            - consulConnect
          - required:
            - osm
          properties:
            agentInfo:
              description: Describes the Gloo Mesh agent if it has been installed
                to the managed cluster.
              properties:
                agentNamespace:
                  description: The namespace in which the Gloo Mesh agent is installed.
                  type: string
              type: object
            awsAppMesh:
              description: Describes an [AWS App Mesh](https://aws.amazon.com/app-mesh/)
                service mesh.
              properties:
                arn:
                  description: The unique AWS ARN associated with the App Mesh instance.
                  type: string
                awsAccountId:
                  description: The AWS Account ID associated with the Mesh. Populated
                    at REST API registration time.
                  type: string
                awsName:
                  description: The AWS name for the App Mesh instance, must be unique
                    across all AppMesh instances owned by the AWS account.
                  type: string
                clusters:
                  description: The Kubernetes clusters on which sidecars for this
                    App Mesh instance have been discovered.
                  items:
                    type: string
                  type: array
                region:
                  description: The AWS region the App Mesh control plane resources
                    exist in.
                  type: string
              type: object
            consulConnect:
              description: Describes a [Consul Connect](https://www.consul.io/docs/connect)
                service mesh.
              properties:
                installation:
                  description: Describes the ConsulConnect control plane deployment.
                  properties:
                    cluster:
                      description: The Gloo Mesh cluster in which the control plane
                        has been installed.
                      type: string
                    namespace:
                      description: Namespace in which the control plane has been installed.
                      type: string
                    podLabels:
                      additionalProperties:
                        type: string
                      description: The labels on the control plane pods (read from
                        the deployment).
                      type: object
                    region:
                      description: |-
                        The region of the cluster in which the control plane has been installed, which is
                        determined from the value of the [Kubernetes region topology label](https://kubernetes.io/docs/reference/labels-annotations-taints/#topologykubernetesioregion)
                        on any Kubernetes node associated with the cluster of this mesh.
                      type: string
                    version:
                      description: |-
                        The version of the Mesh that has been installed, which is determined using the image tag on the
                        mesh's primary control plane image (e.g. the istio-pilot image tag).
                      type: string
                  type: object
              type: object
            istio:
              description: Describes an [Istio](https://istio.io/) service mesh.
              properties:
                ingressGateways:
                  description: |-
                    DEPRECATED: external address data for an ingress gateway destination and workload live in the relevant Destination and Workload objects.
                    Describes the ingress gateway.
                  items:
                    oneOf:
                    - not:
                        anyOf:
                        - required:
                          - dnsName
                        - required:
                          - ip
                    - required:
                      - dnsName
                    - required:
                      - ip
                    properties:
                      dnsName:
                        description: Will be populated if the LoadBalancer Address
                          is a DNS name
                        type: string
                      externalAddress:
                        description: 'DEPRECATED: in favor of dns_name or external_ip'
                        type: string
                      externalTlsPort:
                        description: |-
                          The externally-reachable port on which the gateway is listening for TLS connections.
                          This will be the port used for cross-cluster connectivity.
                          See the list of [common ports used by Istio](https://istio.io/latest/docs/ops/deployment/requirements/#ports-used-by-istio).
                          Defaults to 15443 (or the NodePort) of the Kubernetes service (depending on its type).
                        maximum: 4294967295
                        minimum: 0
                        type: integer
                      ip:
                        description: Will be populated if the LoadBalancer Address
                          is an IP
                        type: string
                      name:
                        description: |-
                          TODO: remove name and namespace as ingress gw info now contains a ref
                          The name of the Ingress Gateway Service
                        type: string
                      namespace:
                        description: The namespace in which the ingress gateway is
                          running.
                        type: string
                      tlsContainerPort:
                        description: |-
                          Container port on which the gateway is listening for TLS connections.
                          Defaults to 15443.
                        maximum: 4294967295
                        minimum: 0
                        type: integer
                      workloadLabels:
                        additionalProperties:
                          type: string
                        description: |-
                          The ingress service selector labels for the gateway.
                          [Defaults to](https://github.com/istio/istio/blob/ab6cc48134a698d7ad218a83390fe27e8098919f/pkg/config/constants/constants.go#L73) `{"istio": "ingressgateway"}`.
                        type: object
                    type: object
                  type: array
                installation:
                  description: Describes the Istio control plane deployment.
                  properties:
                    cluster:
                      description: The Gloo Mesh cluster in which the control plane
                        has been installed.
                      type: string
                    namespace:
                      description: Namespace in which the control plane has been installed.
                      type: string
                    podLabels:
                      additionalProperties:
                        type: string
                      description: The labels on the control plane pods (read from
                        the deployment).
                      type: object
                    region:
                      description: |-
                        The region of the cluster in which the control plane has been installed, which is
                        determined from the value of the [Kubernetes region topology label](https://kubernetes.io/docs/reference/labels-annotations-taints/#topologykubernetesioregion)
                        on any Kubernetes node associated with the cluster of this mesh.
                      type: string
                    version:
                      description: |-
                        The version of the Mesh that has been installed, which is determined using the image tag on the
                        mesh's primary control plane image (e.g. the istio-pilot image tag).
                      type: string
                  type: object
                istiodServiceAccount:
                  description: The istiod service account which determines identity
                    for the Istio CA cert.
                  type: string
                smartDnsProxyingEnabled:
                  description: True if smart DNS proxying is enabled, which allows
                    for arbitrary DNS domains.
                  type: boolean
                trustDomain:
                  description: |-
                    The Istio trust domain used for https/[spiffe](https://spiffe.io/spiffe/concepts/#trust-domain) [identity](https://istio.io/docs/reference/glossary/#identity).
                    If empty will default to ["cluster.local"](https://github.com/istio/istio/blob/e768f408a7de224e64ccdfb2634442541ce08e6a/pilot/cmd/pilot-agent/main.go#L118).
                  type: string
              type: object
            linkerd:
              description: Describes a [Linkerd](https://linkerd.io/) service mesh.
              properties:
                clusterDomain:
                  description: The cluster domain suffix this Linkerd mesh is configured
                    with. See [this reference](https://linkerd.io/2/tasks/using-custom-domain/)
                    for more info.
                  type: string
                installation:
                  description: Describes the Linkerd control plane deployment.
                  properties:
                    cluster:
                      description: The Gloo Mesh cluster in which the control plane
                        has been installed.
                      type: string
                    namespace:
                      description: Namespace in which the control plane has been installed.
                      type: string
                    podLabels:
                      additionalProperties:
                        type: string
                      description: The labels on the control plane pods (read from
                        the deployment).
                      type: object
                    region:
                      description: |-
                        The region of the cluster in which the control plane has been installed, which is
                        determined from the value of the [Kubernetes region topology label](https://kubernetes.io/docs/reference/labels-annotations-taints/#topologykubernetesioregion)
                        on any Kubernetes node associated with the cluster of this mesh.
                      type: string
                    version:
                      description: |-
                        The version of the Mesh that has been installed, which is determined using the image tag on the
                        mesh's primary control plane image (e.g. the istio-pilot image tag).
                      type: string
                  type: object
              type: object
            osm:
              description: Describes an [Open Service Mesh](https://openservicemesh.io/)
                service mesh.
              properties:
                installation:
                  description: Describes the OSM control plane deployment.
                  properties:
                    cluster:
                      description: The Gloo Mesh cluster in which the control plane
                        has been installed.
                      type: string
                    namespace:
                      description: Namespace in which the control plane has been installed.
                      type: string
                    podLabels:
                      additionalProperties:
                        type: string
                      description: The labels on the control plane pods (read from
                        the deployment).
                      type: object
                    region:
                      description: |-
                        The region of the cluster in which the control plane has been installed, which is
                        determined from the value of the [Kubernetes region topology label](https://kubernetes.io/docs/reference/labels-annotations-taints/#topologykubernetesioregion)
                        on any Kubernetes node associated with the cluster of this mesh.
                      type: string
                    version:
                      description: |-
                        The version of the Mesh that has been installed, which is determined using the image tag on the
                        mesh's primary control plane image (e.g. the istio-pilot image tag).
                      type: string
                  type: object
              type: object
          type: object
        status:
          properties:
            appliedEastWestIngressGateways:
              description: The Destination(s) acting as ingress gateways for east
                west traffic.
              items:
                properties:
                  containerPort:
                    description: The port on the ingress gateway's backing Workload(s)
                      designated for receiving cross cluster traffic.
                    maximum: 4294967295
                    minimum: 0
                    type: integer
                  destinationPort:
                    description: The port on the ingress gateway Destination designated
                      for receiving cross cluster traffic.
                    maximum: 4294967295
                    minimum: 0
                    type: integer
                  destinationRef:
                    description: The Destination on the mesh that acts as an ingress
                      gateway for the mesh.
                    properties:
                      name:
                        description: name of the resource being referenced
                        type: string
                      namespace:
                        description: namespace of the resource being referenced
                        type: string
                    type: object
                  externalAddresses:
                    description: The externally accessible address(es) for this ingress
                      gateway Destination.
                    items:
                      type: string
                    type: array
                type: object
              type: array
            appliedVirtualDestinations:
              description: The VirtualDestinations, if any, which apply to this Mesh.
              items:
                properties:
                  errors:
                    description: Any errors encountered while processing the VirtualDestination.
                    items:
                      type: string
                    type: array
                  observedGeneration:
                    description: The observed generation of the accepted VirtualDestination.
                    format: int64
                    type: integer
                  ref:
                    description: Reference to the applied VirtualDestination object.
                    properties:
                      name:
                        description: name of the resource being referenced
                        type: string
                      namespace:
                        description: namespace of the resource being referenced
                        type: string
                    type: object
                type: object
              type: array
            appliedVirtualMesh:
              description: The VirtualMesh, if any, which contains this Mesh.
              properties:
                observedGeneration:
                  description: The observed generation of the accepted VirtualMesh.
                  format: int64
                  type: integer
                ref:
                  description: Reference to the applied VirtualMesh object.
                  properties:
                    name:
                      description: name of the resource being referenced
                      type: string
                    namespace:
                      description: namespace of the resource being referenced
                      type: string
                  type: object
                spec:
                  description: The spec of the last known valid VirtualMesh.
                  properties:
                    federation:
                      description: Specify how to federate Destinations across service
                        mesh boundaries.
                      oneOf:
                      - not:
                          anyOf:
                          - required:
                            - permissive
                      - required:
                        - permissive
                      properties:
                        eastWestIngressGatewaySelectors:
                          description: |-
                            Selects the Destination(s) acting as ingress gateways for cross cluster traffic.
                            The supplied IngressGatewaySelectors will be used to select ingress gateways for all Meshes in this VirtualMesh.
                          items:
                            properties:
                              destinationSelectors:
                                description: |-
                                  The set of Destinations that will be used as ingress gateways for external traffic entering the Mesh.
                                  If omitted, a mesh-specific default ingress gateway destination will be used.
                                  For Istio, any Kubernetes Service(s) with the label pair `{"istio": "ingressgateway"}` will be selected.
                                items:
                                  properties:
                                    kubeServiceMatcher:
                                      description: Match Kubernetes Services by their
                                        labels, namespaces, and/or clusters.
                                      properties:
                                        clusters:
                                          description: |-
                                            If specified, match Kubernetes Services if they exist in one of the specified clusters.
                                                       When used in a networking policy, omission matches any cluster.
                                                       When used in a Gloo Mesh Role, a wildcard (`"*"`) must be specified to match any cluster.
                                          items:
                                            type: string
                                          type: array
                                        labels:
                                          additionalProperties:
                                            type: string
                                          description: |-
                                            If specified, a match requires all labels to exist on a Kubernetes Service.
                                                       When used in a networking policy, omission matches any labels.
                                                       When used in a Gloo Mesh Role, a wildcard (`"*"`) must be specified to match any label key and/or value.
                                          type: object
                                        namespaces:
                                          description: |-
                                            If specified, match Kubernetes Services if they exist in one of the specified namespaces.
                                                       When used in a networking policy, omission matches any namespace.
                                                       When used in a Gloo Mesh Role, a wildcard (`"*"`) must be specified to match any namespace.
                                          items:
                                            type: string
                                          type: array
                                      type: object
                                    kubeServiceRefs:
                                      description: Match Kubernetes Services by direct
                                        reference.
                                      properties:
                                        services:
                                          description: |-
                                            Match Kubernetes Services by direct reference. All fields are required.
                                                       When used in a Gloo Mesh Role, a wildcard (`"*"`) must be specified to match any value for the given field.
                                          items:
                                            properties:
                                              clusterName:
                                                description: name of the cluster in
                                                  which the resource exists
                                                type: string
                                              name:
                                                description: name of the resource
                                                  being referenced
                                                type: string
                                              namespace:
                                                description: namespace of the resource
                                                  being referenced
                                                type: string
                                            type: object
                                          type: array
                                      type: object
                                  type: object
                                type: array
                              portName:
                                description: Specify by name the TLS port on the ingress
                                  gateway destination. If not specified, will default
                                  to "tls".
                                type: string
                            type: object
                          type: array
                        flatNetwork:
                          description: |-
                            If true, all multicluster traffic will be routed directly to the Kubernetes service endpoints of the Destinations,
                            rather than through an ingress gateway. This mode requires a flat network environment.
                            This feature is exclusive to Gloo Mesh Enterprise.
                          type: boolean
                        hostnameSuffix:
                          description: |-
                            Configure the suffix for hostnames of Destinations federated within this VirtualMesh.
                            Currently this is only supported for Istio with [smart DNS proxying enabled](https://istio.io/latest/blog/2020/dns-proxy/),
                            otherwise setting this field results in an error.
                            If omitted, the hostname suffix defaults to "global".
                          type: string
                        permissive:
                          description: |-
                            DEPRECATED: Use `selectors` with an empty selector (i.e. `{}`) for permissive semantics.
                            Expose all Destinations to all Workloads in this VirtualMesh.
                          maxProperties: 0
                          type: object
                        selectors:
                          description: |-
                            Selectively federate Destinations to specific external meshes.
                            If omitted, no Destinations will be federated.
                          items:
                            properties:
                              destinationSelectors:
                                description: |-
                                  The set of Destinations that will be federated to external Meshes.
                                  If omitted, all Destinations will be selected.
                                items:
                                  properties:
                                    kubeServiceMatcher:
                                      description: Match Kubernetes Services by their
                                        labels, namespaces, and/or clusters.
                                      properties:
                                        clusters:
                                          description: |-
                                            If specified, match Kubernetes Services if they exist in one of the specified clusters.
                                                       When used in a networking policy, omission matches any cluster.
                                                       When used in a Gloo Mesh Role, a wildcard (`"*"`) must be specified to match any cluster.
                                          items:
                                            type: string
                                          type: array
                                        labels:
                                          additionalProperties:
                                            type: string
                                          description: |-
                                            If specified, a match requires all labels to exist on a Kubernetes Service.
                                                       When used in a networking policy, omission matches any labels.
                                                       When used in a Gloo Mesh Role, a wildcard (`"*"`) must be specified to match any label key and/or value.
                                          type: object
                                        namespaces:
                                          description: |-
                                            If specified, match Kubernetes Services if they exist in one of the specified namespaces.
                                                       When used in a networking policy, omission matches any namespace.
                                                       When used in a Gloo Mesh Role, a wildcard (`"*"`) must be specified to match any namespace.
                                          items:
                                            type: string
                                          type: array
                                      type: object
                                    kubeServiceRefs:
                                      description: Match Kubernetes Services by direct
                                        reference.
                                      properties:
                                        services:
                                          description: |-
                                            Match Kubernetes Services by direct reference. All fields are required.
                                                       When used in a Gloo Mesh Role, a wildcard (`"*"`) must be specified to match any value for the given field.
                                          items:
                                            properties:
                                              clusterName:
                                                description: name of the cluster in
                                                  which the resource exists
                                                type: string
                                              name:
                                                description: name of the resource
                                                  being referenced
                                                type: string
                                              namespace:
                                                description: namespace of the resource
                                                  being referenced
                                                type: string
                                            type: object
                                          type: array
                                      type: object
                                  type: object
                                type: array
                              meshes:
                                description: |-
                                  The Meshes to which the selected Destinations will be federated. All referenced Meshes must exist in this VirtualMesh.
                                  If omitted, the selected Destinations will be federated to all Meshes in the VirtualMesh.
                                items:
                                  properties:
                                    name:
                                      description: name of the resource being referenced
                                      type: string
                                    namespace:
                                      description: namespace of the resource being
                                        referenced
                                      type: string
                                  type: object
                                type: array
                            type: object
                          type: array
                        tcpKeepalive:
                          description: |-
                            Specify a keepalive rule for all requests made within the VirtualMesh which cross clusters within that VirtualMesh,
                            as well as any requests to externalService type destinations.
                          properties:
                            interval:
                              description: |-
                                The time duration between keep-alive probes.
                                Format examples: `1h`/`1m`/`1s`/`1ms`
                              type: string
                            probes:
                              description: Maximum number of TCP keepalive probes
                                to send before determining that connection is dead.
                              maximum: 4294967295
                              minimum: 0
                              type: integer
                            time:
                              description: |-
                                The time duration a connection needs to be idle before keep-alive probes start being sent.
                                Format examples: `1h`/`1m`/`1s`/`1ms`.
                              type: string
                          type: object
                      type: object
                    globalAccessPolicy:
                      description: Specify a global access policy for all Workloads
                        and Destinations associated with this VirtualMesh.
                      enum:
                      - MESH_DEFAULT
                      - ENABLED
                      - DISABLED
                      type: string
                    meshes:
                      description: Specify the Meshes configured by this VirtualMesh.
                      items:
                        properties:
                          name:
                            description: name of the resource being referenced
                            type: string
                          namespace:
                            description: namespace of the resource being referenced
                            type: string
                        type: object
                      type: array
                    mtlsConfig:
                      description: Specify mTLS options.
                      oneOf:
                      - not:
                          anyOf:
                          - properties:
                              shared:
                                oneOf:
                                - not:
                                    anyOf:
                                    - properties:
                                        rootCertificateAuthority:
                                          oneOf:
                                          - not:
                                              anyOf:
                                              - required:
                                                - generated
                                              - required:
                                                - secret
                                          - required:
                                            - generated
                                          - required:
                                            - secret
                                      required:
                                      - rootCertificateAuthority
                                    - properties:
                                        intermediateCertificateAuthority:
                                          oneOf:
                                          - not:
                                              anyOf:
                                              - properties:
                                                  vault:
                                                    oneOf:
                                                    - not:
                                                        anyOf:
                                                        - required:
                                                          - tokenSecretRef
                                                        - properties:
                                                            kubernetesAuth:
                                                              oneOf:
                                                              - not:
                                                                  anyOf:
                                                                  - required:
                                                                    - serviceAccountRef
                                                                  - required:
                                                                    - mountedSaPath
                                                              - required:
                                                                - serviceAccountRef
                                                              - required:
                                                                - mountedSaPath
                                                          required:
                                                          - kubernetesAuth
                                                    - required:
                                                      - tokenSecretRef
                                                    - properties:
                                                        kubernetesAuth:
                                                          oneOf:
                                                          - not:
                                                              anyOf:
                                                              - required:
                                                                - serviceAccountRef
                                                              - required:
                                                                - mountedSaPath
                                                          - required:
                                                            - serviceAccountRef
                                                          - required:
                                                            - mountedSaPath
                                                      required:
                                                      - kubernetesAuth
                                                required:
                                                - vault
                                          - properties:
                                              vault:
                                                oneOf:
                                                - not:
                                                    anyOf:
                                                    - required:
                                                      - tokenSecretRef
                                                    - properties:
                                                        kubernetesAuth:
                                                          oneOf:
                                                          - not:
                                                              anyOf:
                                                              - required:
                                                                - serviceAccountRef
                                                              - required:
                                                                - mountedSaPath
                                                          - required:
                                                            - serviceAccountRef
                                                          - required:
                                                            - mountedSaPath
                                                      required:
                                                      - kubernetesAuth
                                                - required:
                                                  - tokenSecretRef
                                                - properties:
                                                    kubernetesAuth:
                                                      oneOf:
                                                      - not:
                                                          anyOf:
                                                          - required:
                                                            - serviceAccountRef
                                                          - required:
                                                            - mountedSaPath
                                                      - required:
                                                        - serviceAccountRef
                                                      - required:
                                                        - mountedSaPath
                                                  required:
                                                  - kubernetesAuth
                                            required:
                                            - vault
                                      required:
                                      - intermediateCertificateAuthority
                                - properties:
                                    rootCertificateAuthority:
                                      oneOf:
                                      - not:
                                          anyOf:
                                          - required:
                                            - generated
                                          - required:
                                            - secret
                                      - required:
                                        - generated
                                      - required:
                                        - secret
                                  required:
                                  - rootCertificateAuthority
                                - properties:
                                    intermediateCertificateAuthority:
                                      oneOf:
                                      - not:
                                          anyOf:
                                          - properties:
                                              vault:
                                                oneOf:
                                                - not:
                                                    anyOf:
                                                    - required:
                                                      - tokenSecretRef
                                                    - properties:
                                                        kubernetesAuth:
                                                          oneOf:
                                                          - not:
                                                              anyOf:
                                                              - required:
                                                                - serviceAccountRef
                                                              - required:
                                                                - mountedSaPath
                                                          - required:
                                                            - serviceAccountRef
                                                          - required:
                                                            - mountedSaPath
                                                      required:
                                                      - kubernetesAuth
                                                - required:
                                                  - tokenSecretRef
                                                - properties:
                                                    kubernetesAuth:
                                                      oneOf:
                                                      - not:
                                                          anyOf:
                                                          - required:
                                                            - serviceAccountRef
                                                          - required:
                                                            - mountedSaPath
                                                      - required:
                                                        - serviceAccountRef
                                                      - required:
                                                        - mountedSaPath
                                                  required:
                                                  - kubernetesAuth
                                            required:
                                            - vault
                                      - properties:
                                          vault:
                                            oneOf:
                                            - not:
                                                anyOf:
                                                - required:
                                                  - tokenSecretRef
                                                - properties:
                                                    kubernetesAuth:
                                                      oneOf:
                                                      - not:
                                                          anyOf:
                                                          - required:
                                                            - serviceAccountRef
                                                          - required:
                                                            - mountedSaPath
                                                      - required:
                                                        - serviceAccountRef
                                                      - required:
                                                        - mountedSaPath
                                                  required:
                                                  - kubernetesAuth
                                            - required:
                                              - tokenSecretRef
                                            - properties:
                                                kubernetesAuth:
                                                  oneOf:
                                                  - not:
                                                      anyOf:
                                                      - required:
                                                        - serviceAccountRef
                                                      - required:
                                                        - mountedSaPath
                                                  - required:
                                                    - serviceAccountRef
                                                  - required:
                                                    - mountedSaPath
                                              required:
                                              - kubernetesAuth
                                        required:
                                        - vault
                                  required:
                                  - intermediateCertificateAuthority
                            required:
                            - shared
                          - required:
                            - limited
                      - properties:
                          shared:
                            oneOf:
                            - not:
                                anyOf:
                                - properties:
                                    rootCertificateAuthority:
                                      oneOf:
                                      - not:
                                          anyOf:
                                          - required:
                                            - generated
                                          - required:
                                            - secret
                                      - required:
                                        - generated
                                      - required:
                                        - secret
                                  required:
                                  - rootCertificateAuthority
                                - properties:
                                    intermediateCertificateAuthority:
                                      oneOf:
                                      - not:
                                          anyOf:
                                          - properties:
                                              vault:
                                                oneOf:
                                                - not:
                                                    anyOf:
                                                    - required:
                                                      - tokenSecretRef
                                                    - properties:
                                                        kubernetesAuth:
                                                          oneOf:
                                                          - not:
                                                              anyOf:
                                                              - required:
                                                                - serviceAccountRef
                                                              - required:
                                                                - mountedSaPath
                                                          - required:
                                                            - serviceAccountRef
                                                          - required:
                                                            - mountedSaPath
                                                      required:
                                                      - kubernetesAuth
                                                - required:
                                                  - tokenSecretRef
                                                - properties:
                                                    kubernetesAuth:
                                                      oneOf:
                                                      - not:
                                                          anyOf:
                                                          - required:
                                                            - serviceAccountRef
                                                          - required:
                                                            - mountedSaPath
                                                      - required:
                                                        - serviceAccountRef
                                                      - required:
                                                        - mountedSaPath
                                                  required:
                                                  - kubernetesAuth
                                            required:
                                            - vault
                                      - properties:
                                          vault:
                                            oneOf:
                                            - not:
                                                anyOf:
                                                - required:
                                                  - tokenSecretRef
                                                - properties:
                                                    kubernetesAuth:
                                                      oneOf:
                                                      - not:
                                                          anyOf:
                                                          - required:
                                                            - serviceAccountRef
                                                          - required:
                                                            - mountedSaPath
                                                      - required:
                                                        - serviceAccountRef
                                                      - required:
                                                        - mountedSaPath
                                                  required:
                                                  - kubernetesAuth
                                            - required:
                                              - tokenSecretRef
                                            - properties:
                                                kubernetesAuth:
                                                  oneOf:
                                                  - not:
                                                      anyOf:
                                                      - required:
                                                        - serviceAccountRef
                                                      - required:
                                                        - mountedSaPath
                                                  - required:
                                                    - serviceAccountRef
                                                  - required:
                                                    - mountedSaPath
                                              required:
                                              - kubernetesAuth
                                        required:
                                        - vault
                                  required:
                                  - intermediateCertificateAuthority
                            - properties:
                                rootCertificateAuthority:
                                  oneOf:
                                  - not:
                                      anyOf:
                                      - required:
                                        - generated
                                      - required:
                                        - secret
                                  - required:
                                    - generated
                                  - required:
                                    - secret
                              required:
                              - rootCertificateAuthority
                            - properties:
                                intermediateCertificateAuthority:
                                  oneOf:
                                  - not:
                                      anyOf:
                                      - properties:
                                          vault:
                                            oneOf:
                                            - not:
                                                anyOf:
                                                - required:
                                                  - tokenSecretRef
                                                - properties:
                                                    kubernetesAuth:
                                                      oneOf:
                                                      - not:
                                                          anyOf:
                                                          - required:
                                                            - serviceAccountRef
                                                          - required:
                                                            - mountedSaPath
                                                      - required:
                                                        - serviceAccountRef
                                                      - required:
                                                        - mountedSaPath
                                                  required:
                                                  - kubernetesAuth
                                            - required:
                                              - tokenSecretRef
                                            - properties:
                                                kubernetesAuth:
                                                  oneOf:
                                                  - not:
                                                      anyOf:
                                                      - required:
                                                        - serviceAccountRef
                                                      - required:
                                                        - mountedSaPath
                                                  - required:
                                                    - serviceAccountRef
                                                  - required:
                                                    - mountedSaPath
                                              required:
                                              - kubernetesAuth
                                        required:
                                        - vault
                                  - properties:
                                      vault:
                                        oneOf:
                                        - not:
                                            anyOf:
                                            - required:
                                              - tokenSecretRef
                                            - properties:
                                                kubernetesAuth:
                                                  oneOf:
                                                  - not:
                                                      anyOf:
                                                      - required:
                                                        - serviceAccountRef
                                                      - required:
                                                        - mountedSaPath
                                                  - required:
                                                    - serviceAccountRef
                                                  - required:
                                                    - mountedSaPath
                                              required:
                                              - kubernetesAuth
                                        - required:
                                          - tokenSecretRef
                                        - properties:
                                            kubernetesAuth:
                                              oneOf:
                                              - not:
                                                  anyOf:
                                                  - required:
                                                    - serviceAccountRef
                                                  - required:
                                                    - mountedSaPath
                                              - required:
                                                - serviceAccountRef
                                              - required:
                                                - mountedSaPath
                                          required:
                                          - kubernetesAuth
                                    required:
                                    - vault
                              required:
                              - intermediateCertificateAuthority
                        required:
                        - shared
                      - required:
                        - limited
                      properties:
                        autoRestartPods:
                          description: |-
                            Specify whether to allow Gloo Mesh to restart Kubernetes Pods when certificates are rotated when establishing shared trust.
                            If this option is not explicitly enabled,
                            users must restart Pods manually for the new certificates to be picked up.
                            `meshctl` provides the command `meshctl mesh restart` to simplify this process, see [here]({{< versioned_link_path fromRoot="reference/cli/meshctl_mesh_restart/" >}}) for more info.
                          type: boolean
                        limited:
                          description: Limited trust (selectively allow communication
                            between Workloads and Destinations in the grouped Meshes).
                            *Currently not available.*
                          type: object
                        rotationStrategy:
                          description: Type of rotation to use.
                          enum:
                          - MULTI_ROOT
                          - NONE
                          type: string
                        rotationVerificationMethod:
                          description: Type of rotation verification to use when rotating
                            root certificates.
                          oneOf:
                          - not:
                              anyOf:
                              - required:
                                - none
                              - required:
                                - manual
                          - required:
                            - none
                          - required:
                            - manual
                          properties:
                            manual:
                              description: |-
                                Verification must be completed manually. This involves using our certificate verification
                                endpoint when the certificates are in a VERIFYING state
                              maxProperties: 0
                              type: object
                            none:
                              description: |-
                                Verification not enabled. NOTE: This setting is only recommended for testing.
                                When enabled rotation will continue from step to step without any kind of verification.
                              maxProperties: 0
                              type: object
                          type: object
                        shared:
                          description: Shared trust (allow communication between any
                            pair of Workloads and Destinations in the grouped Meshes).
                          properties:
                            intermediateCertOptions:
                              description: Configuration options for generated intermediate
                                certs.
                              properties:
                                orgName:
                                  description: Root cert organization name. Defaults
                                    to "gloo-mesh".
                                  type: string
                                rsaKeySizeBytes:
                                  description: Size in bytes of the root cert's private
                                    key. Defaults to 4096.
                                  maximum: 4294967295
                                  minimum: 0
                                  type: integer
                                secretRotationGracePeriodRatio:
                                  description: |-
                                    The ratio of cert lifetime to refresh a cert. For example, at 0.10 and 1 hour TTL,
                                    we would refresh 6 minutes before expiration
                                  format: float
                                  type: number
                                ttlDays:
                                  description: Number of days before root cert expires.
                                    Defaults to 365.
                                  maximum: 4294967295
                                  minimum: 0
                                  type: integer
                              type: object
                            intermediateCertificateAuthority:
                              description: |-
                                Configures an Intermediate Certificiate Authority which remote clusters will use to generate intermediate
                                certificates. In order for this to properly mesh all of the traffic across the different meshes, the CA
                                being used must be configured to generate the intermediate certificates.
                              properties:
                                vault:
                                  description: Use vault as the intermediate CA source
                                  properties:
                                    caBundle:
                                      description: |-
                                        PEM encoded CA bundle used to validate Vault server certificate. Only used
                                        if the Server URL is using HTTPS protocol. This parameter is ignored for
                                        plain HTTP protocol connection. If not set the system root certificates
                                        are used to validate the TLS connection.
                                      format: binary
                                      type: string
                                    caPath:
                                      description: |-
                                        `ca_path` is the mount path of the Vault PKI backend's `sign` endpoint, e.g:
                                        "my_pki_mount/sign/my-role-name".
                                      type: string
                                    csrPath:
                                      description: |-
                                        `csr_path` is the mount path of the Vault PKI backend's `generate` endpoint, e.g:
                                        "my_pki_mount/intermediate/generate/exported".
                                        "exported" is necessary here as istio needs access to the private key
                                        See vault docs here: https://www.vaultproject.io/api-docs/secret/pki#parameters-4
                                      type: string
                                    kubernetesAuth:
                                      description: |-
                                        Kubernetes authenticates with Vault by passing the ServiceAccount
                                        token stored in the named Secret resource to the Vault server.
                                      properties:
                                        mountPath:
                                          description: |-
                                            The Vault mountPath here is the mount path to use when authenticating with
                                            Vault. For example, setting a value to `/v1/auth/foo`, will use the path
                                            `/v1/auth/foo/login` to authenticate with Vault. If unspecified, the
                                            default value "/v1/auth/kubernetes" will be used.
                                          type: string
                                        mountedSaPath:
                                          description: |-
                                            File System path to grab the service account token from.
                                            Defaults to /var/run/secrets/kubernetes.io/serviceaccount
                                          type: string
                                        role:
                                          description: |-
                                            A required field containing the Vault Role to assume. A Role binds a
                                            Kubernetes ServiceAccount with a set of Vault policies.
                                          type: string
                                        secretTokenKey:
                                          description: |-
                                            Key to search for the sa_token
                                            Default to "token"
                                          type: string
                                        serviceAccountRef:
                                          description: Reference to service account,
                                            other than the one mounted to the current
                                            pod.
                                          properties:
                                            name:
                                              description: name of the resource being
                                                referenced
                                              type: string
                                            namespace:
                                              description: namespace of the resource
                                                being referenced
                                              type: string
                                          type: object
                                      type: object
                                    namespace:
                                      description: |-
                                        Name of the vault namespace. Namespaces is a set of features within Vault Enterprise that allows Vault environments to support Secure Multi-tenancy. e.g: "ns1"
                                        More about namespaces can be found [here](https://www.vaultproject.io/docs/enterprise/namespaces)
                                      type: string
                                    server:
                                      description: 'Server is the connection address
                                        for the Vault server, e.g: "https://vault.example.com:8200".'
                                      type: string
                                    tokenSecretRef:
                                      description: TokenSecretRef authenticates with
                                        Vault by presenting a token.
                                      properties:
                                        name:
                                          description: name of the resource being
                                            referenced
                                          type: string
                                        namespace:
                                          description: namespace of the resource being
                                            referenced
                                          type: string
                                      type: object
                                  type: object
                              type: object
                            rootCertificateAuthority:
                              description: |-
                                Configure a Root Certificate Authority which will be shared by all Meshes associated with this VirtualMesh.
                                If this is not provided, a self-signed certificate will be generated by Gloo Mesh.
                              properties:
                                generated:
                                  description: Generate a self-signed root certificate
                                    with the given options.
                                  properties:
                                    orgName:
                                      description: Root cert organization name. Defaults
                                        to "gloo-mesh".
                                      type: string
                                    rsaKeySizeBytes:
                                      description: Size in bytes of the root cert's
                                        private key. Defaults to 4096.
                                      maximum: 4294967295
                                      minimum: 0
                                      type: integer
                                    secretRotationGracePeriodRatio:
                                      description: |-
                                        The ratio of cert lifetime to refresh a cert. For example, at 0.10 and 1 hour TTL,
                                        we would refresh 6 minutes before expiration
                                      format: float
                                      type: number
                                    ttlDays:
                                      description: Number of days before root cert
                                        expires. Defaults to 365.
                                      maximum: 4294967295
                                      minimum: 0
                                      type: integer
                                  type: object
                                secret:
                                  description: |-
                                    Reference to a Kubernetes Secret containing the root certificate authority.
                                    Provided secrets must conform to a specified format, [documented here]({{< versioned_link_path fromRoot="/guides/federate_identity/" >}}).
                                  properties:
                                    name:
                                      description: name of the resource being referenced
                                      type: string
                                    namespace:
                                      description: namespace of the resource being
                                        referenced
                                      type: string
                                  type: object
                              type: object
                          type: object
                      type: object
                  type: object
              type: object
            observedGeneration:
              description: |-
                The observed generation of the Mesh.
                When this matches the Mesh's metadata.generation, it indicates that Gloo Mesh
                has processed the latest version of the Mesh.
              format: int64
              type: integer
          type: object
      type: object
  versions:
  - name: v1
    served: true
    storage: true
