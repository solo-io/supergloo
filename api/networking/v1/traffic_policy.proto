syntax = "proto3";
package networking.mesh.gloo.solo.io;
option go_package = "github.com/solo-io/gloo-mesh/pkg/api/networking.mesh.gloo.solo.io/v1";

import "google/protobuf/duration.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";

import "github.com/solo-io/skv2/api/core/v1/core.proto";
import "github.com/solo-io/gloo-mesh/api/networking/v1/request_matchers.proto";
import "github.com/solo-io/gloo-mesh/api/common/v1/validation_state.proto";
import "github.com/solo-io/gloo-mesh/api/common/v1/selectors.proto";
import "github.com/solo-io/gloo-mesh/api/networking/v1/status.proto";
import "github.com/solo-io/gloo-mesh/api/common/v1/string_match.proto";
import "github.com/solo-io/gloo-mesh/api/networking/v1/weighed_destination.proto";
import "github.com/solo-io/gloo-mesh/api/networking/v1/ratelimit/rate_limit.proto";
import "github.com/solo-io/gloo-mesh/api/networking/v1/csrf/csrf.proto";
import "github.com/solo-io/gloo-mesh/api/networking/v1/transformation/transformation.proto";

import "extproto/ext.proto";
option (extproto.equal_all) = true;

// Applies L7 routing and post-routing configuration on selected network edges.
message TrafficPolicySpec {

    // Specify the Workloads (traffic sources) this TrafficPolicy applies to.
    // Omit to apply to all Workloads.
    repeated .common.mesh.gloo.solo.io.WorkloadSelector source_selector = 1;

    // Specify the Destinations (destinations) this TrafficPolicy applies to.
    // Omit to apply to all Destinations.
    repeated .common.mesh.gloo.solo.io.DestinationSelector destination_selector = 2;

    // Specify criteria that HTTP requests must satisfy for the TrafficPolicy to apply.
    // Conditions defined within a single matcher are conjunctive, i.e. all conditions must be satisfied for a match to occur.
    // Conditions defined between different matchers are disjunctive, i.e. at least one matcher must be satisfied for the TrafficPolicy to apply.
    // Omit to apply to any HTTP request.
    repeated .networking.mesh.gloo.solo.io.HttpMatcher http_request_matchers = 3;

    // Specify L7 routing and post-routing configuration.
    Policy policy = 4;

    // Specify L7 routing and post-routing configuration.
    message Policy {

        // Shift traffic to a different destination.
        MultiDestination traffic_shift = 4;

        // Inject faulty responses.
        FaultInjection fault_injection = 5;

        // Set a timeout on requests.
        google.protobuf.Duration request_timeout = 6;

        // Set a retry policy on requests.
        RetryPolicy retries = 7;

        // Set a Cross-Origin Resource Sharing policy (CORS) for requests. Refer to [this link](https://developer.mozilla.org/en-US/docs/Web/HTTP/Access_control_CORS)
        // for further details about cross origin resource sharing.
        CorsPolicy cors_policy = 8;

        // Mirror traffic to a another destination (traffic will be sent to its original destination in addition to the mirrored destinations).
        Mirror mirror = 9;

        // Manipulate request and response headers.
        HeaderManipulation header_manipulation = 10;

        // Configure [outlier detection](https://www.envoyproxy.io/docs/envoy/latest/intro/arch_overview/upstream/outlier) on the selected destinations.
        // Specifying this field requires an empty `source_selector` because it must apply to all traffic.
        OutlierDetection outlier_detection = 11;

        // Configure mTLS settings. If specified will override global default defined in Settings.
        MTLS mtls = 12;

        // Configure the Envoy based CSRF filter
        .csrf.networking.mesh.gloo.solo.io.CsrfPolicy csrf = 13;

        // Config the Envoy based Ratelimit filter
        .ratelimit.networking.mesh.gloo.solo.io.RouteRateLimit rate_limit = 14;

        // Configure transformations of HTTP header / body content on request or response data.
        .transformation.networking.mesh.gloo.solo.io.RouteTransformations transformations = 15;

        // Specify retries for failed requests.
        message RetryPolicy {

            // Number of retries for a given request
            int32 attempts = 1;

            // Timeout per retry attempt for a given request. Format: `1h`/`1m`/`1s`/`1ms`. *Must be >= 1ms*.
            google.protobuf.Duration per_try_timeout = 2;
        }

        // Specify a traffic shift destination.
        message MultiDestination {

            // Specify weighted traffic shift destinations.
            repeated WeightedDestination destinations = 1;

        }

        // Specify one or more faults to inject for the selected network edge.
        message FaultInjection {

            // Indicate the amount of delay in seconds.
            // The optional _percentage_ field can be used to only delay a certain
            // percentage of requests. If left unspecified, all request will be delayed.

            // Specify the type of fault to inject.
            oneof fault_injection_type {

                // Add a delay of a fixed duration before sending the request. Format: `1h`/`1m`/`1s`/`1ms`. MUST be >=1ms.
                google.protobuf.Duration fixed_delay = 1;

                // Abort the request and return the specified error code back to traffic source.
                Abort abort = 2;
            }

            // Abort the request and return the specified error code back to traffic source.
            message Abort {

                // Required. HTTP status code to use to abort the request.
                int32 http_status = 1;
            }

            // Percentage of requests to be faulted. Values range between 0 and 100. If omitted all requests will be faulted.
            double percentage = 4;
        }

        // Specify Cross-Origin Resource Sharing policy (CORS) for requests. Refer to [this link](https://developer.mozilla.org/en-US/docs/Web/HTTP/Access_control_CORS)
        // for further details about cross origin resource sharing.
        message CorsPolicy {

            // String patterns that match allowed origins. An origin is allowed if any of the string matchers match.
            repeated .common.mesh.gloo.solo.io.StringMatch allow_origins = 7;

            // List of HTTP methods allowed to access the resource. The content will
            // be serialized to the `Access-Control-Allow-Methods` header.
            repeated string allow_methods = 2;

            // List of HTTP headers that can be used when requesting the
            // resource. Serialized to the `Access-Control-Allow-Headers` header.
            repeated string allow_headers = 3;

            // A list of HTTP headers that browsers are allowed to
            // access. Serialized to the `Access-Control-Expose-Headers` header.
            repeated string expose_headers = 4;

            // Specify how long the results of a preflight request can be
            // cached. Serialized to the `Access-Control-Max-Age` header.
            google.protobuf.Duration max_age = 5;

            // Indicates whether the caller is allowed to send the actual request
            // (not the preflight) using credentials. Translates to the
            // `Access-Control-Allow-Credentials` header.
            google.protobuf.BoolValue allow_credentials = 6;
        }

        // Mirror traffic to a another destination (traffic will be sent to its original destination in addition to the mirrored destinations).
        message Mirror {

            // Platform specific mirror destinations.
            oneof destination_type {

                // Reference (name, namespace, Gloo Mesh cluster) to a Kubernetes service.
                .core.skv2.solo.io.ClusterObjectRef kube_service = 1;
            }

            // Percentage of traffic to mirror. If omitted all traffic will be mirrored. Values must be between 0 and 100.
            double percentage = 2;

            // Port on the destination to receive traffic. Required if the destination exposes multiple ports.
            uint32 port = 3;
        }

        // Configure [outlier detection](https://www.envoyproxy.io/docs/envoy/latest/intro/arch_overview/upstream/outlier) on the selected destinations.
        // Specifying this field requires an empty `source_selector` because it must apply to all traffic.
        message OutlierDetection {

            // The number of errors before a host is ejected from the connection pool. A default will be used if not set.
            uint32 consecutive_errors = 1;

            // The time interval between ejection sweep analysis. Format: `1h`/`1m`/`1s`/`1ms`. Must be >= `1ms`. A default will be used if not set.
            google.protobuf.Duration interval = 2;

            // The minimum ejection duration. Format: `1h`/`1m`/`1s`/`1ms`. Must be >= `1ms`. A default will be used if not set.
            google.protobuf.Duration base_ejection_time = 3;

            // The maximum percentage of hosts that can be ejected from the load balancing pool.
            // At least one host will be ejected regardless of the value. Must be between 0 and 100. A default will be used if not set.
            uint32 max_ejection_percent = 4;
        }

        // Configure mTLS settings on destinations. If specified this overrides the global default defined in Settings.
        message MTLS {

            // Istio TLS settings.
            Istio istio = 1;

            // Istio TLS settings.
            message Istio {

                // TLS connection mode
                TLSmode tls_mode = 1;

                // TLS connection mode. Enums correspond to those
                // [defined here](https://github.com/istio/api/blob/00636152b9d9254b614828a65723840282a177d3/networking/v1beta1/destination_rule.proto#L886)
                enum TLSmode {

                    // Do not originate a TLS connection to the upstream endpoint.
                    DISABLE = 0;

                    // Originate a TLS connection to the upstream endpoint.
                    SIMPLE = 1;

                    // Secure connections to the upstream using mutual TLS by presenting
                    // client certificates for authentication.
                    // This mode uses certificates generated
                    // automatically by Istio for mTLS authentication. When this mode is
                    // used, all other fields in `ClientTLSSettings` should be empty.
                    ISTIO_MUTUAL = 2;
                };
            }
        }

        // DLP filter config.
        message DLPPolicy {
            // TODO: implement
            string todo = 1;
        }

        // ExtAuth filter config.
        message ExtAuth {
            // TODO: implement
            string todo = 1;
        }

    }
}

message TrafficPolicyStatus {

    // The most recent generation observed in the the TrafficPolicy metadata.
    // If the `observedGeneration` does not match `metadata.generation`, Gloo Mesh has not processed the most
    // recent version of this resource.
    int64 observed_generation = 1;

    // The state of the overall resource.
    // It will only show accepted if it has been successfully applied to all selected Destinations.
    .common.mesh.gloo.solo.io.ApprovalState state = 2;

    // The status of the TrafficPolicy for each selected Destination.
    // A TrafficPolicy may be Accepted for some Destinations and rejected for others.
    map<string, ApprovalStatus> destinations = 3;

    // The list of selected Workloads for which this policy has been applied.
    repeated string workloads = 4;

    // Any errors found while processing this generation of the resource.
    repeated string errors = 5;
}

